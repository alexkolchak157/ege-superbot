# core/utils.py
"""–û–±—â–∏–µ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è –≤—Å–µ—Ö –ø–ª–∞–≥–∏–Ω–æ–≤."""

import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, ConversationHandler
from telegram.error import BadRequest

logger = logging.getLogger(__name__)

async def safe_edit_message(
    update: Update, 
    new_text: str, 
    reply_markup=None, 
    parse_mode=None
) -> bool:
    """
    –ë–µ–∑–æ–ø–∞—Å–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏–≥–Ω–æ—Ä–∏—Ä—É—è –æ—à–∏–±–∫—É "–Ω–µ –∏–∑–º–µ–Ω–µ–Ω–æ".
    
    Returns:
        bool: True –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ, False –µ—Å–ª–∏ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
    """
    query = update.callback_query
    if not query:
        return False
        
    try:
        await query.edit_message_text(
            new_text, 
            reply_markup=reply_markup, 
            parse_mode=parse_mode
        )
        return True
    except BadRequest as e:
        if "message is not modified" in str(e).lower():
            logger.debug(f"Message not modified for user {query.from_user.id}")
            return False
        else:
            # –ï—Å–ª–∏ —ç—Ç–æ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞ - –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º
            raise

async def safe_answer_callback(update: Update, text: str = None, show_alert: bool = False):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ callback query."""
    if update.callback_query:
        try:
            await update.callback_query.answer(text, show_alert=show_alert)
        except Exception as e:
            logger.warning(f"Failed to answer callback query: {e}")

def create_back_to_menu_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—ë—Ç —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="to_main_menu")]
    ])

async def handle_to_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    from .plugin_loader import build_main_menu
    
    await safe_answer_callback(update)
    kb = build_main_menu()
    
    await safe_edit_message(
        update, 
        "üëã –ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å?", 
        reply_markup=kb
    )
    
    # –û—á–∏—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
    context.user_data.clear()
    return ConversationHandler.END

def get_plugin_keyboard_pattern(plugin_code: str) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è callback_data –ø–ª–∞–≥–∏–Ω–∞."""
    return f"^choose_{plugin_code}$"

class CallbackData:
    """–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ callback_data –¥–ª—è –≤—Å–µ—Ö –ø–ª–∞–≥–∏–Ω–æ–≤."""
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    TO_MAIN_MENU = "to_main_menu"
    TO_MENU = "to_menu" 
    CANCEL = "cancel"
    
    # –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Ä–µ–∂–∏–º–∞–º
    MODE_RANDOM = "mode:random"
    MODE_TOPIC = "mode:choose_topic"
    MODE_EXAM_NUM = "mode:choose_exam_num"
    
    # –î–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞
    NEXT_RANDOM = "next_random"
    NEXT_TOPIC = "next_topic" 
    CHANGE_TOPIC = "change_topic"
    
    # –†–∞–±–æ—Ç–∞ —Å –æ—à–∏–±–∫–∞–º–∏
    SHOW_EXPLANATION = "show_explanation"
    NEXT_MISTAKE = "next_mistake"
    SKIP_MISTAKE = "skip_mistake"
    EXIT_MISTAKES = "exit_mistakes"
    
    @classmethod
    def get_plugin_entry(cls, plugin_code: str) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç callback_data –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –ø–ª–∞–≥–∏–Ω."""
        return f"choose_{plugin_code}"