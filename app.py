# core/app.py (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π)
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path
project_root = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
if project_root not in sys.path:
    sys.path.insert(0, project_root)

from telegram.ext import Application, CommandHandler
from core.plugin_loader import discover_plugins, build_main_menu, PLUGINS
from core.menu_handlers import register_global_handlers

# –ü–æ–ø—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–∫–µ–Ω –∏–∑ test_part –∏–ª–∏ task24
try:
    from test_part.config import BOT_TOKEN
except ImportError:
    try:
        from task24.config import BOT_TOKEN
    except ImportError:
        import os
        BOT_TOKEN = os.getenv("TG_TOKEN") or os.getenv("TELEGRAM_BOT_TOKEN")
        if not BOT_TOKEN:
            raise ValueError("–ù–µ –Ω–∞–π–¥–µ–Ω BOT_TOKEN! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã config.py –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è.")

async def start(update, context):
    """–ì–ª–∞–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ /start - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –ø–ª–∞–≥–∏–Ω–æ–≤."""
    await update.message.reply_text(
        "üëã –ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å?",
        reply_markup=build_main_menu(),
    )

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    
    print("üîç –û–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ–º –ø–ª–∞–≥–∏–Ω—ã...")
    discover_plugins()
    
    print("‚öôÔ∏è –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...")
    app = (
        Application.builder()
        .token(BOT_TOKEN)
        .post_init(lambda a: a.bot.delete_webhook(drop_pending_updates=True))
        .build()
    )

    print("üåê –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏...")
    register_global_handlers(app)
    
    print("üìù –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /start...")
    app.add_handler(CommandHandler("start", start))

    print("üîå –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–ª–∞–≥–∏–Ω—ã...")
    for plugin in PLUGINS:
        app.add_handler(plugin.entry_handler())
        plugin.register(app)

    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
    app.run_polling()

if __name__ == "__main__":
    main()