#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏–∏ callback_data –≤–æ –≤—Å–µ—Ö –º–æ–¥—É–ª—è—Ö
"""

import re
import os
from pathlib import Path

# –°–ª–æ–≤–∞—Ä—å –∑–∞–º–µ–Ω callback_data
CALLBACK_REPLACEMENTS = {
    # Task20
    't20_new_topic': 't20_new',
    
    # Task19
    't19_new_topic': 't19_new',
    
    # Task24
    'task24_progress': 't24_progress',
    'task24_menu': 't24_menu',
    'task24_practice': 't24_practice',
    
    # Task25
    't25_new_topic': 't25_new',
}

# –§–∞–π–ª—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
FILES_TO_PROCESS = [
    'task20/plugin.py',
    'task20/handlers.py',
    'task19/plugin.py', 
    'task19/handlers.py',
    'task24/plugin.py',
    'task24/handlers.py',
    'task25/plugin.py',
    'task25/handlers.py',
]

def replace_callbacks_in_file(filepath):
    """–ó–∞–º–µ–Ω—è–µ—Ç callback_data –≤ —Ñ–∞–π–ª–µ"""
    try:
        with open(filepath, 'r', encoding='utf-8') as f:
            content = f.read()
        
        original = content
        
        # –ó–∞–º–µ–Ω—è–µ–º callback_data –≤ –∫–Ω–æ–ø–∫–∞—Ö
        for old, new in CALLBACK_REPLACEMENTS.items():
            # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è callback_data –≤ –∫–Ω–æ–ø–∫–∞—Ö
            pattern1 = rf'callback_data="{re.escape(old)}"'
            replacement1 = f'callback_data="{new}"'
            content = re.sub(pattern1, replacement1, content)
            
            # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è pattern –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö
            pattern2 = rf'pattern="\^{re.escape(old)}\$"'
            replacement2 = f'pattern="^{new}$"'
            content = re.sub(pattern2, replacement2, content)
            
            # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–æ–∫ –≤ –∫–æ–¥–µ
            pattern3 = rf'== "{re.escape(old)}"'
            replacement3 = f'== "{new}"'
            content = re.sub(pattern3, replacement3, content)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º, –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if content != original:
            with open(filepath, 'w', encoding='utf-8') as f:
                f.write(content)
            print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω: {filepath}")
            return True
        else:
            print(f"‚è≠Ô∏è  –ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {filepath}")
            return False
    
    except FileNotFoundError:
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {filepath}")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {filepath}: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏—è callback_data...\n")
    
    updated_count = 0
    
    for filepath in FILES_TO_PROCESS:
        if replace_callbacks_in_file(filepath):
            updated_count += 1
    
    print(f"\n‚ú® –ì–æ—Ç–æ–≤–æ! –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {updated_count}")
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    print("\nüìù –ù–µ –∑–∞–±—É–¥—å—Ç–µ —Ç–∞–∫–∂–µ:")
    print("1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã —Å –Ω–æ–≤—ã–º–∏ –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º–∏")
    print("2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É –∫–Ω–æ–ø–æ–∫ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π")
    print("3. –û–±–Ω–æ–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏")

if __name__ == "__main__":
    main()