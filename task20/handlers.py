"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∑–∞–¥–∞–Ω–∏—è 20."""

import logging
import os
import json
from typing import Optional, Dict, List

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.constants import ParseMode
from telegram.ext import ContextTypes, ConversationHandler

from core import states

logger = logging.getLogger(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏—è 20
task20_data = {}

async def init_task20_data():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–¥–∞–Ω–∏—è 20."""
    global task20_data
    
    # –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É
    task20_data = {
        "topics": [],
        "blocks": {}
    }
    logger.info("Task20 data initialized (stub)")

async def entry_from_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–í—Ö–æ–¥ –≤ –∑–∞–¥–∞–Ω–∏–µ 20 –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    query = update.callback_query
    await query.answer()
    
    text = (
        "üìù <b>–ó–∞–¥–∞–Ω–∏–µ 20</b>\n\n"
        "–í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ –Ω—É–∂–Ω–æ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Å—É–∂–¥–µ–Ω–∏—è (–∞—Ä–≥—É–º–µ–Ω—Ç—ã) "
        "–∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –æ–±–æ–±—â–µ–Ω–∏—è.\n\n"
        "‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b> –ù–ï –ø—Ä–∏–≤–æ–¥–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã!\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:"
    )
    
    kb = InlineKeyboardMarkup([
        [InlineKeyboardButton("üí™ –ü—Ä–∞–∫—Ç–∏–∫–∞", callback_data="t20_practice")],
        [InlineKeyboardButton("üìö –¢–µ–æ—Ä–∏—è –∏ —Å–æ–≤–µ—Ç—ã", callback_data="t20_theory")],
        [InlineKeyboardButton("üè¶ –ë–∞–Ω–∫ —Å—É–∂–¥–µ–Ω–∏–π", callback_data="t20_examples")],
        [InlineKeyboardButton("üìä –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å", callback_data="t20_progress")],
        [InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="t20_settings")],
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="to_main_menu")]
    ])
    
    await query.edit_message_text(
        text,
        reply_markup=kb,
        parse_mode=ParseMode.HTML
    )
    
    return states.CHOOSING_MODE

async def cmd_task20(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /task20."""
    text = (
        "üìù <b>–ó–∞–¥–∞–Ω–∏–µ 20</b>\n\n"
        "–í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ –Ω—É–∂–Ω–æ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Å—É–∂–¥–µ–Ω–∏—è (–∞—Ä–≥—É–º–µ–Ω—Ç—ã) "
        "–∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –æ–±–æ–±—â–µ–Ω–∏—è.\n\n"
        "‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b> –ù–ï –ø—Ä–∏–≤–æ–¥–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã!\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:"
    )
    
    kb = InlineKeyboardMarkup([
        [InlineKeyboardButton("üí™ –ü—Ä–∞–∫—Ç–∏–∫–∞", callback_data="t20_practice")],
        [InlineKeyboardButton("üìö –¢–µ–æ—Ä–∏—è –∏ —Å–æ–≤–µ—Ç—ã", callback_data="t20_theory")],
        [InlineKeyboardButton("üè¶ –ë–∞–Ω–∫ —Å—É–∂–¥–µ–Ω–∏–π", callback_data="t20_examples")],
        [InlineKeyboardButton("üìä –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å", callback_data="t20_progress")],
        [InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="t20_settings")],
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="to_main_menu")]
    ])
    
    await update.message.reply_text(
        text,
        reply_markup=kb,
        parse_mode=ParseMode.HTML
    )
    
    return states.CHOOSING_MODE

# –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
async def practice_mode(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–†–µ–∂–∏–º –ø—Ä–∞–∫—Ç–∏–∫–∏."""
    query = update.callback_query
    await query.answer()
    
    await query.edit_message_text(
        "üöß <b>–†–µ–∂–∏–º –ø—Ä–∞–∫—Ç–∏–∫–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</b>\n\n"
        "–ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ:\n"
        "‚Ä¢ –í—ã–±—Ä–∞—Ç—å —Ç–µ–º—É –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n"
        "‚Ä¢ –ù–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–∏ —Å—É–∂–¥–µ–Ω–∏—è\n"
        "‚Ä¢ –ü–æ–ª—É—á–∏—Ç—å –æ—Ü–µ–Ω–∫—É –∏ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å",
        reply_markup=InlineKeyboardMarkup([[
            InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="t20_menu")
        ]]),
        parse_mode=ParseMode.HTML
    )
    return states.CHOOSING_MODE

async def theory_mode(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–†–µ–∂–∏–º —Ç–µ–æ—Ä–∏–∏."""
    query = update.callback_query
    await query.answer()
    
    await query.edit_message_text(
        "üìö <b>–¢–µ–æ—Ä–∏—è –ø–æ –∑–∞–¥–∞–Ω–∏—é 20</b>\n\n"
        "<b>–ö–ª—é—á–µ–≤—ã–µ –æ—Ç–ª–∏—á–∏—è –æ—Ç –∑–∞–¥–∞–Ω–∏—è 19:</b>\n"
        "‚Ä¢ –ù–ï –Ω—É–∂–Ω—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã\n"
        "‚Ä¢ –¢—Ä–µ–±—É—é—Ç—Å—è –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ —Å—É–∂–¥–µ–Ω–∏—è\n"
        "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±–æ–±—â–∞—é—â–∏–µ —Å–ª–æ–≤–∞\n\n"
        "<b>–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:</b>\n"
        "‚Ä¢ —Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç...\n"
        "‚Ä¢ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫...\n"
        "‚Ä¢ –≤–ª–∏—è–µ—Ç –Ω–∞...\n"
        "‚Ä¢ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç...\n"
        "‚Ä¢ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç...",
        reply_markup=InlineKeyboardMarkup([[
            InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="t20_menu")
        ]]),
        parse_mode=ParseMode.HTML
    )
    return states.CHOOSING_MODE

async def examples_bank(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ë–∞–Ω–∫ —Å—É–∂–¥–µ–Ω–∏–π."""
    query = update.callback_query
    await query.answer()
    
    await query.edit_message_text(
        "üè¶ <b>–ë–∞–Ω–∫ —Å—É–∂–¥–µ–Ω–∏–π</b>\n\n"
        "–ó–¥–µ—Å—å –±—É–¥—É—Ç –ø—Ä–∏–º–µ—Ä—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö —Å—É–∂–¥–µ–Ω–∏–π –ø–æ —Ä–∞–∑–Ω—ã–º —Ç–µ–º–∞–º.",
        reply_markup=InlineKeyboardMarkup([[
            InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="t20_menu")
        ]]),
        parse_mode=ParseMode.HTML
    )
    return states.CHOOSING_MODE

async def my_progress(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    query = update.callback_query
    await query.answer()
    
    await query.edit_message_text(
        "üìä <b>–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å</b>\n\n"
        "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ—Å–ª–µ –Ω–∞—á–∞–ª–∞ –ø—Ä–∞–∫—Ç–∏–∫–∏.",
        reply_markup=InlineKeyboardMarkup([[
            InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="t20_menu")
        ]]),
        parse_mode=ParseMode.HTML
    )
    return states.CHOOSING_MODE

async def settings_mode(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏."""
    query = update.callback_query
    await query.answer()
    
    await query.edit_message_text(
        "‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>\n\n"
        "–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–æ–≥–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏.",
        reply_markup=InlineKeyboardMarkup([[
            InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="t20_menu")
        ]]),
        parse_mode=ParseMode.HTML
    )
    return states.CHOOSING_MODE

async def return_to_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é –∑–∞–¥–∞–Ω–∏—è 20."""
    return await entry_from_menu(update, context)

async def back_to_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    from core.plugin_loader import build_main_menu
    
    query = update.callback_query
    await query.answer()
    
    await query.edit_message_text(
        "üëã –ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å?",
        reply_markup=build_main_menu()
    )
    
    return ConversationHandler.END

async def noop(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü—É—Å—Ç–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫."""
    query = update.callback_query
    await query.answer()
    return None

# –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
async def select_block(update: Update, context: ContextTypes.DEFAULT_TYPE):
    return await practice_mode(update, context)

async def handle_result_action(update: Update, context: ContextTypes.DEFAULT_TYPE):
    return await practice_mode(update, context)

async def block_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    return await practice_mode(update, context)

async def list_topics(update: Update, context: ContextTypes.DEFAULT_TYPE):
    return await practice_mode(update, context)

async def random_topic_all(update: Update, context: ContextTypes.DEFAULT_TYPE):
    return await practice_mode(update, context)

async def random_topic_block(update: Update, context: ContextTypes.DEFAULT_TYPE):
    return await practice_mode(update, context)

async def bank_navigation(update: Update, context: ContextTypes.DEFAULT_TYPE):
    return await examples_bank(update, context)

async def bank_search(update: Update, context: ContextTypes.DEFAULT_TYPE):
    return await examples_bank(update, context)

async def set_strictness(update: Update, context: ContextTypes.DEFAULT_TYPE):
    return await settings_mode(update, context)

async def detailed_progress(update: Update, context: ContextTypes.DEFAULT_TYPE):
    return await my_progress(update, context)

async def export_results(update: Update, context: ContextTypes.DEFAULT_TYPE):
    return await my_progress(update, context)

async def choose_topic(update: Update, context: ContextTypes.DEFAULT_TYPE):
    return await practice_mode(update, context)

async def handle_answer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    await update.message.reply_text(
        "–í–∞—à –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω. –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.",
        reply_markup=InlineKeyboardMarkup([[
            InlineKeyboardButton("‚¨ÖÔ∏è –í –º–µ–Ω—é", callback_data="t20_menu")
        ]])
    )
    return states.CHOOSING_MODE

async def handle_bank_search(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∏—Å–∫–∞ –≤ –±–∞–Ω–∫–µ."""
    return await examples_bank(update, context)

async def cmd_cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è."""
    return await back_to_main_menu(update, context)
