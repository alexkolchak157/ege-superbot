"""AI-–ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –∑–∞–¥–∞–Ω–∏—è 25 —á–µ—Ä–µ–∑ YandexGPT.

–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ–º–ø—Ç–∞–º–∏ –¥–ª—è –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –ö1, –ö2, –ö3.
–í–∫–ª—é—á–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ —Å–≤—è–∑–∏ –º–µ–∂–¥—É –∫—Ä–∏—Ç–µ—Ä–∏—è–º–∏.
"""

import logging
import os
import json
from enum import Enum
from typing import Dict, List, Any, Optional
from core.types import (
    UserID,
    TaskType,
    EvaluationResult,
    CallbackData,
    TaskRequirements,
)

logger = logging.getLogger(__name__)

# –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∏–º–ø–æ—Ä—Ç
try:
    from core.ai_evaluator import (
        BaseAIEvaluator,
    )
    # –í–ê–ñ–ù–û: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º YandexGPTModel –∏–∑ core.ai_service
    from core.ai_service import YandexGPTService, YandexGPTConfig, YandexGPTModel
    AI_EVALUATOR_AVAILABLE = True
except ImportError as e:
    logger.warning(f"AI evaluator components not available: {e}")
    AI_EVALUATOR_AVAILABLE = False

    # –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–µ–∑ AI
    class BaseAIEvaluator:
        def __init__(self, requirements: TaskRequirements):
            self.requirements = requirements
    
    class YandexGPTService:
        pass
    
    class YandexGPTConfig:
        pass
    
    # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è Enum –∫–æ–≥–¥–∞ AI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
    from enum import Enum
    class YandexGPTModel(Enum):
        LITE = "yandexgpt-lite"
        PRO = "yandexgpt"


class Task25EvaluationResult(EvaluationResult if AI_EVALUATOR_AVAILABLE else object):
    """–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ü–µ–Ω–∫–∏ –¥–ª—è –∑–∞–¥–∞–Ω–∏—è 25."""

    def format_feedback(self) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."""
        text = f"üìä <b>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏</b>\n\n"

        # –ë–∞–ª–ª—ã –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º
        text += "<b>–ë–∞–ª–ª—ã –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º:</b>\n"

        # –ò–°–ü–†–ê–í–õ–ï–ù–û: –∏—Å–ø–æ–ª—å–∑—É–µ–º self.criteria_scores –≤–º–µ—Å—Ç–æ self.scores
        scores = self.criteria_scores if hasattr(self, 'criteria_scores') and self.criteria_scores else {}

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –∫–ª—é—á–µ–π
        k1_score = scores.get('k1_score', scores.get('–ö1', 0))
        k2_score = scores.get('k2_score', scores.get('–ö2', 0))
        k3_score = scores.get('k3_score', scores.get('–ö3', 0))

        text += f"–ö1 (–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ): {k1_score}/2\n"
        text += f"–ö2 (–û—Ç–≤–µ—Ç): {k2_score}/1\n"
        text += f"–ö3 (–ü—Ä–∏–º–µ—Ä—ã): {k3_score}/3\n"

        # –ò—Ç–æ–≥–æ–≤—ã–π –±–∞–ª–ª
        text += f"\n<b>–ò—Ç–æ–≥–æ: {self.total_score}/{self.max_score} –±–∞–ª–ª–æ–≤</b>\n\n"

        # –û—Å–Ω–æ–≤–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
        if self.feedback:
            text += f"{self.feedback}\n"

        # –ò–°–ü–†–ê–í–õ–ï–ù–û: –∏—Å–ø–æ–ª—å–∑—É–µ–º self.detailed_feedback –≤–º–µ—Å—Ç–æ self.detailed_analysis
        if self.detailed_feedback:
            text += "\n<b>–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑:</b>\n"

            # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º
            if 'k1_comment' in self.detailed_feedback:
                text += f"\n<b>–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ:</b> {self.detailed_feedback['k1_comment']}\n"

            if 'k2_comment' in self.detailed_feedback:
                text += f"\n<b>–û—Ç–≤–µ—Ç:</b> {self.detailed_feedback['k2_comment']}\n"

            if 'k3_comment' in self.detailed_feedback:
                text += f"\n<b>–ü—Ä–∏–º–µ—Ä—ã:</b> {self.detailed_feedback['k3_comment']}\n"

                # –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã
                if 'k3_examples_found' in self.detailed_feedback:
                    examples = self.detailed_feedback['k3_examples_found']
                    if examples and isinstance(examples, list):
                        text += "\n–ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã:\n"
                        for i, ex in enumerate(examples[:3], 1):
                            text += f"{i}. {ex}\n"

        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        if self.suggestions:
            text += "\nüí° <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</b>\n"
            for suggestion in self.suggestions:
                text += f"‚Ä¢ {suggestion}\n"

        # –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
        if self.factual_errors:
            text += "\n‚ö†Ô∏è <b>–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ:</b>\n"
            for error in self.factual_errors:
                if isinstance(error, dict):
                    text += f"‚Ä¢ {error.get('error', error)}"
                    if 'correction' in error:
                        text += f" ‚Üí {error['correction']}"
                    text += "\n"
                else:
                    text += f"‚Ä¢ {error}\n"

        return text


class StrictnessLevel(Enum):
    """–£—Ä–æ–≤–Ω–∏ —Å—Ç—Ä–æ–≥–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏."""
    LENIENT = "lenient"      # –ú—è–≥–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    STANDARD = "standard"    # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    STRICT = "strict"        # –°—Ç—Ä–æ–≥–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    EXPERT = "expert"        # –≠–∫—Å–ø–µ—Ä—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞


class Task25AIEvaluator:
    """AI-–æ—Ü–µ–Ω—â–∏–∫ –¥–ª—è –∑–∞–¥–∞–Ω–∏—è 25."""
    
    def __init__(self, strictness: StrictnessLevel = StrictnessLevel.STANDARD):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ü–µ–Ω—â–∏–∫–∞.
        
        Args:
            strictness: –£—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–æ–≥–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏
        """
        self.strictness = strictness
        self.ai_service = None
        
        if not AI_EVALUATOR_AVAILABLE:
            logger.warning("AI evaluator not available")
            return
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º API –∫–ª—é—á–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
            api_key = os.getenv("YANDEX_GPT_API_KEY")
            folder_id = os.getenv("YANDEX_GPT_FOLDER_ID")
            
            if not api_key or not folder_id:
                logger.error("YANDEX_GPT_API_KEY –∏ YANDEX_GPT_FOLDER_ID –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
                self.ai_service = None
                return
            
            # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º YandexGPT
            config = YandexGPTConfig(
                api_key=api_key,
                folder_id=folder_id,
                model=YandexGPTModel.PRO,
                temperature=self._get_temperature(),
                max_tokens=3000,
            )

            self.ai_service = YandexGPTService(config)
            logger.info(
                f"Task25 AI service initialized with {self.strictness.value} strictness"
            )

        except Exception as e:
            logger.error(f"Failed to initialize AI service: {e}")
            self.ai_service = None
    
    def get_temperature(self) -> float:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –¥–ª—è AI –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç—Ä–æ–≥–æ—Å—Ç–∏."""
        temps = {
            StrictnessLevel.LENIENT: 0.3,
            StrictnessLevel.STANDARD: 0.2,
            StrictnessLevel.STRICT: 0.1,
            StrictnessLevel.EXPERT: 0.05
        }
        return temps.get(self.strictness, 0.2)

    def _get_temperature(self) -> float:
        """–ê–ª–∏–∞—Å –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏."""
        return self.get_temperature()
    
    def get_system_prompt(self, mode='full') -> str:
        """–°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–¥–∞–Ω–∏—è 25."""
        
        if mode == 'parts':
            # –ü—Ä–æ–º–ø—Ç –¥–ª—è –ø–æ—ç—Ç–∞–ø–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
            base_prompt = """–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ï–ì–≠ –ø–æ –æ–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏—é, –ø—Ä–æ–≤–µ—Ä—è—é—â–∏–π –æ—Ç–¥–µ–ª—å–Ω—É—é —á–∞—Å—Ç—å –∑–∞–¥–∞–Ω–∏—è 25.

–í–ê–ñ–ù–û: –°–µ–π—á–∞—Å –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –¢–û–õ–¨–ö–û –û–î–ù–ê –ß–ê–°–¢–¨ –∑–∞–¥–∞–Ω–∏—è, –Ω–µ –≤–µ—Å—å –æ—Ç–≤–µ—Ç.

–ü—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —á–∞—Å—Ç–∏ –ö1 (–æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ):
- 2 –±–∞–ª–ª–∞: —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç–æ–µ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ —Å —Ç–µ–æ—Ä–∏–µ–π, –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
- 1 –±–∞–ª–ª: –∫—Ä–∞—Ç–∫–æ–µ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –∏–ª–∏ –µ—Å—Ç—å –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç–∏
- 0 –±–∞–ª–ª–æ–≤: –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω–æ–µ

–ü—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —á–∞—Å—Ç–∏ –ö2 (–æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å):
- 1 –±–∞–ª–ª: –¥–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏ –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç
- 0 –±–∞–ª–ª–æ–≤: –æ—Ç–≤–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç

–ü—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —á–∞—Å—Ç–∏ –ö3 (–ø—Ä–∏–º–µ—Ä—ã):
- –û—Ü–µ–Ω–∏ –∫–∞–∂–¥—ã–π –ø—Ä–∏–º–µ—Ä –æ—Ç–¥–µ–ª—å–Ω–æ (0-1 –±–∞–ª–ª)
- –ú–∞–∫—Å–∏–º—É–º 3 –±–∞–ª–ª–∞ –∑–∞ —Ç—Ä–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–∞
- –ü—Ä–∏–º–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –∏ —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–º
"""
        else:
            # –û–ë–ù–û–í–õ–Å–ù–ù–´–ô –°–¢–ê–ù–î–ê–†–¢–ù–´–ô –ü–†–û–ú–ü–¢ —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ –∫—Ä–∏—Ç–µ—Ä–∏—è–º–∏
            base_prompt = """–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ï–ì–≠ –ø–æ –æ–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏—é, –ø—Ä–æ–≤–µ—Ä—è—é—â–∏–π –∑–∞–¥–∞–Ω–∏–µ 25.

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
–ö–†–ò–¢–ï–†–ò–ò –û–¶–ï–ù–ò–í–ê–ù–ò–Ø –ü–û –§–ò–ü–ò:
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

–ö1 - –û–ë–û–°–ù–û–í–ê–ù–ò–ï (0-2 –±–∞–ª–ª–∞):

2 –ë–ê–õ–õ–ê - –∫–æ–≥–¥–∞ –û–î–ù–û–í–†–ï–ú–ï–ù–ù–û –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –í–°–ï —É—Å–ª–æ–≤–∏—è:
‚úì –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ —Å –æ–ø–æ—Ä–æ–π –Ω–∞ –æ–±—â–µ—Å—Ç–≤–æ–≤–µ–¥—á–µ—Å–∫–∏–µ –∑–Ω–∞–Ω–∏—è
‚úì –î–∞–Ω–æ –≤ –ù–ï–°–ö–û–õ–¨–ö–ò–• –†–ê–°–ü–†–û–°–¢–†–ê–ù–Å–ù–ù–´–• –ü–†–ï–î–õ–û–ñ–ï–ù–ò–Ø–• (–º–∏–Ω–∏–º—É–º 2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –∫–∞–∂–¥–æ–µ –Ω–µ –º–µ–Ω–µ–µ 5-7 —Å–ª–æ–≤)
‚úì –ù–ï —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—à–∏–±–æ–∫, –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç–µ–π –∏ –∏—Å–∫–∞–∂–µ–Ω–∏–π
‚úì –†–ê–°–ö–†–´–í–ê–ï–¢ –ø—Ä–∏—á–∏–Ω–Ω–æ-—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –ò/–ò–õ–ò —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–≤—è–∑–∏
‚úì –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –æ–±—â–µ—Å—Ç–≤–æ–≤–µ–¥—á–µ—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã

1 –ë–ê–õ–õ - –∫–æ–≥–¥–∞:
‚Ä¢ –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö, –ù–û —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–µ –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç–∏ 
  –ò–õ–ò –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç –ø—Ä–∏—á–∏–Ω–Ω–æ-—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–≤—è–∑–∏

0 –ë–ê–õ–õ–û–í - –∫–æ–≥–¥–∞:
‚Ä¢ –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –≤ –û–î–ù–û–ú –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ò –∏–ª–∏ –°–õ–û–í–û–°–û–ß–ï–¢–ê–ù–ò–ò
‚Ä¢ –ë–ï–ó –æ–ø–æ—Ä—ã –Ω–∞ –æ–±—â–µ—Å—Ç–≤–æ–≤–µ–¥—á–µ—Å–∫–∏–µ –∑–Ω–∞–Ω–∏—è (–Ω–∞ –±—ã—Ç–æ–≤–æ–º —É—Ä–æ–≤–Ω–µ)
‚Ä¢ –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
‚Ä¢ –°–æ–¥–µ—Ä–∂–∏—Ç —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏

–ü–†–ò–ó–ù–ê–ö–ò –ö–ê–ß–ï–°–¢–í–ï–ù–ù–û–ì–û –û–ë–û–°–ù–û–í–ê–ù–ò–Ø:
- –ú–∏–Ω–∏–º—É–º 2-3 —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
- –ß—ë—Ç–∫–∞—è –ª–æ–≥–∏–∫–∞: —Ç–µ–∑–∏—Å ‚Üí –∞—Ä–≥—É–º–µ–Ω—Ç ‚Üí –≤—ã–≤–æ–¥
- –¢–µ—Ä–º–∏–Ω—ã: "–∏–Ω—Å—Ç–∏—Ç—É—Ç", "—Ñ—É–Ω–∫—Ü–∏—è", "–ø—Ä–æ—Ü–µ—Å—Å", "–º–µ—Ö–∞–Ω–∏–∑–º", "—Å–∏—Å—Ç–µ–º–∞"
- –Ø–≤–Ω—ã–µ —Å–≤—è–∑–∏: "—á—Ç–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫...", "–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ...", "–æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç...", "—Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç..."

‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

–ö2 - –û–¢–í–ï–¢ –ù–ê –í–û–ü–†–û–° (0-1 –±–∞–ª–ª):

1 –ë–ê–õ–õ - –∫–æ–≥–¥–∞ –û–î–ù–û–í–†–ï–ú–ï–ù–ù–û:
‚úì –î–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
‚úì –£–∫–∞–∑–∞–Ω–æ –ù–ï–û–ë–•–û–î–ò–ú–û–ï –ö–û–õ–ò–ß–ï–°–¢–í–û —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–æ–±—ã—á–Ω–æ 3)
‚úì –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –Ø–í–ù–û–ú –í–ò–î–ï –∫–∞–∫ –°–ê–ú–û–°–¢–û–Ø–¢–ï–õ–¨–ù–´–ô —ç–ª–µ–º–µ–Ω—Ç
‚úì –ù–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π
‚úì –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û: –ï—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è "–≤ –†–§/–†–æ—Å—Å–∏–∏" - –í–°–ï —ç–ª–µ–º–µ–Ω—Ç—ã —Ä–µ–∞–ª—å–Ω—ã –¥–ª—è –†–§

0 –ë–ê–õ–õ–û–í - –∫–æ–≥–¥–∞:
‚Ä¢ –£–∫–∞–∑–∞–Ω–æ –ú–ï–ù–¨–®–ï —Ç—Ä–µ–±—É–µ–º–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
‚Ä¢ –ï—Å—Ç—å –ù–ï–í–ï–†–ù–´–ï –ø–æ–∑–∏—Ü–∏–∏
‚Ä¢ –û—Ç–≤–µ—Ç –Ω–µ –¥–∞–Ω –≤ —è–≤–Ω–æ–º –≤–∏–¥–µ
‚Ä¢ –ù–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω –∫–∞–∫ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
‚Ä¢ –ü—Ä–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–∏ –†–§ - –Ω–µ—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ/–∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
‚Ä¢ –û—Ç–≤–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç

–ü–†–û–í–ï–†–ö–ê –†–û–°–°–ò–ô–°–ö–û–ì–û –ö–û–ù–¢–ï–ö–°–¢–ê:
–ï—Å–ª–∏ –≤ –∑–∞–¥–∞–Ω–∏–∏: "–≤ –†–§", "–≤ –†–æ—Å—Å–∏–∏", "—Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ":
‚ùå –ù–ï –ó–ê–°–ß–ò–¢–´–í–ê–ï–¢–°–Ø: –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–µ —Ä–µ–∞–ª–∏–∏, –≤—ã–¥—É–º–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
‚úÖ –ó–ê–°–ß–ò–¢–´–í–ê–ï–¢–°–Ø: —Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–µ —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –∏–Ω—Å—Ç–∏—Ç—É—Ç—ã/–ø–∞—Ä—Ç–∏–∏/–º–µ—Ä—ã

‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

–ö3 - –ü–†–ò–ú–ï–†–´ (0-3 –±–∞–ª–ª–∞):

–ë–ê–ó–û–í–´–ï –ü–†–ê–í–ò–õ–ê:
‚úì –ú–∞–∫—Å–∏–º—É–º 3 –±–∞–ª–ª–∞ (–ø–æ 1 –±–∞–ª–ª—É –∑–∞ –∫–∞–∂–¥—ã–π –ø—Ä–∏–º–µ—Ä)
‚úì –ö–∞–∂–¥—ã–π –ø—Ä–∏–º–µ—Ä –†–ê–ó–í–Å–†–ù–£–¢–û (–º–∏–Ω–∏–º—É–º –ø–æ–ª–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ)
‚úì –û–¢–î–ï–õ–¨–ù–´–ï –°–õ–û–í–ê –ò –°–õ–û–í–û–°–û–ß–ï–¢–ê–ù–ò–Ø –ù–ï –ó–ê–°–ß–ò–¢–´–í–ê–Æ–¢–°–Ø!
‚úì –ü—Ä–∏–º–µ—Ä—ã –∏–ª–ª—é—Å—Ç—Ä–∏—Ä—É—é—Ç –†–ê–ó–ù–´–ï –∞—Å–ø–µ–∫—Ç—ã/—Ñ—É–Ω–∫—Ü–∏–∏
‚úì –ï—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –†–§ - –ø—Ä–∏–º–µ—Ä—ã –¢–û–õ–¨–ö–û –∏–∑ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö —Ä–µ–∞–ª–∏–π

3 –ë–ê–õ–õ–ê: —Ç—Ä–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç—ã—Ö –ø—Ä–∏–º–µ—Ä–∞, –∏–ª–ª—é—Å—Ç—Ä–∏—Ä—É—é—â–∏—Ö –¢–†–ò –†–ê–ó–ù–´–• –∞—Å–ø–µ–∫—Ç–∞, –±–µ–∑ –æ—à–∏–±–æ–∫

2 –ë–ê–õ–õ–ê: –¥–≤–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–∞ –ò–õ–ò 2-3 –æ–¥–Ω–æ—Ç–∏–ø–Ω—ã—Ö (–∑–∞—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –∫–∞–∫ –æ–¥–∏–Ω) 
         –ò–õ–ò —Ç—Ä–∏ –ø—Ä–∏–º–µ—Ä–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã, –Ω–æ –µ—Å—Ç—å –æ—à–∏–±–∫–∏ –≤ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–• –ø—Ä–∏–º–µ—Ä–∞—Ö

1 –ë–ê–õ–õ: –æ–¥–∏–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—Ä–∏–º–µ—Ä

0 –ë–ê–õ–õ–û–í: –ø—Ä–∏–º–µ—Ä—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç, –Ω–µ –∑–∞—Å—á–∏—Ç–∞–Ω—ã, –≤ –≤–∏–¥–µ —Å–ª–æ–≤/—Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–π, –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û:
‚ùå –ï—Å–ª–∏ 2-3 –ø—Ä–∏–º–µ—Ä–∞ –∏–ª–ª—é—Å—Ç—Ä–∏—Ä—É—é—Ç –û–î–ù–£ —Ñ—É–Ω–∫—Ü–∏—é ‚Üí –∑–∞—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –∫–∞–∫ –û–î–ò–ù –ø—Ä–∏–º–µ—Ä
‚ùå –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã —Å –æ—à–∏–±–∫–∞–º–∏ ‚Üí –º–∞–∫—Å–∏–º—É–º 1 –±–∞–ª–ª
‚ùå –ï—Å–ª–∏ –ø—Ä–∏–º–µ—Ä - —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–µ ("–≤—ã–±–æ—Ä—ã –≤ –ì–æ—Å–¥—É–º—É") ‚Üí –ù–ï –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è
‚ùå –ï—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –†–§, –∞ —É–∫–∞–∑–∞–Ω–æ "–≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ Z" ‚Üí –ù–ï –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è

–ú–ò–ù–ò–ú–£–ú –¥–ª—è –∑–∞—Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –ø—Ä–∏–º–µ—Ä–∞:
"[–ö–¢–û] [–ß–¢–û –°–î–ï–õ–ê–õ] [–í –ö–ê–ö–û–ô –°–ò–¢–£–ê–¶–ò–ò] [–†–ï–ó–£–õ–¨–¢–ê–¢]"

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
–°–í–Ø–ó–¨ –ú–ï–ñ–î–£ –ö2 –ò –ö3:
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û!
–ï—Å–ª–∏ –≤–æ –≤—Ç–æ—Ä–æ–º –ø—É–Ω–∫—Ç–µ (–ö2) –ø—Ä–∏–≤–µ–¥—ë–Ω –û–®–ò–ë–û–ß–ù–´–ô —ç–ª–µ–º–µ–Ω—Ç, —Ç–æ –ø—Ä–∏–º–µ—Ä –≤ –ö3, 
–∏–ª–ª—é—Å—Ç—Ä–∏—Ä—É—é—â–∏–π —ç—Ç–æ—Ç –æ—à–∏–±–æ—á–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç, –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò –ù–ï –ó–ê–°–ß–ò–¢–´–í–ê–ï–¢–°–Ø!

–ü—Ä–∏–º–µ—Ä:
–ö2: 1. –≠–ª–µ–º–µ–Ω—Ç –ê ‚úì
    2. –≠–ª–µ–º–µ–Ω—Ç –ë ‚úó (–û–®–ò–ë–û–ß–ù–´–ô!)
    3. –≠–ª–µ–º–µ–Ω—Ç –í ‚úì

–ö3: –ü—Ä–∏–º–µ—Ä 1 –¥–ª—è –ê - –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è ‚úì
    –ü—Ä–∏–º–µ—Ä 2 –¥–ª—è –ë - –ù–ï –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è ‚úó (—Ç.–∫. –ë –æ—à–∏–±–æ—á–µ–Ω!)
    –ü—Ä–∏–º–µ—Ä 3 –¥–ª—è –í - –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è ‚úì
    
‚Üí –ö3: –º–∞–∫—Å–∏–º—É–º 2 –±–∞–ª–ª–∞ (–Ω–µ 3!)

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
–í–ê–ñ–ù–´–ï –ò–ù–°–¢–†–£–ö–¶–ò–ò:
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

1. –í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π –†–û–°–°–ò–ô–°–ö–ò–ô –ö–û–ù–¢–ï–ö–°–¢ –∫–æ–≥–¥–∞ —É–ø–æ–º—è–Ω—É—Ç–∞ –†–§/–†–æ—Å—Å–∏—è
2. –°—á–∏—Ç–∞–π –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –≤ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–∏
3. –ü—Ä–æ–≤–µ—Ä—è–π –∫–∞–∂–¥—ã–π –ø—Ä–∏–º–µ—Ä –Ω–∞ —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç–æ—Å—Ç—å
4. –ü—Ä–æ–≤–µ—Ä—è–π, –∏–ª–ª—é—Å—Ç—Ä–∏—Ä—É—é—Ç –ª–∏ –ø—Ä–∏–º–µ—Ä—ã –†–ê–ó–ù–´–ï —Ñ—É–Ω–∫—Ü–∏–∏/–∞—Å–ø–µ–∫—Ç—ã
5. –ü—Ä–æ–≤–µ—Ä—è–π —Å–≤—è–∑—å –ö2 –∏ –ö3 - –æ—à–∏–±–æ—á–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –ö2 = –Ω–µ–∑–∞—Å—á–∏—Ç–∞–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä –≤ –ö3!
6. –ü—Ä–æ–≤–µ—Ä—è–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –Ω–∞ –æ—à–∏–±–∫–∏
7. –ë—É–¥—å —Å—Ç—Ä–æ–≥–∏–º –Ω–æ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–º
"""
        
        # –î–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç—Ä–æ–≥–æ—Å—Ç–∏
        if self.strictness == StrictnessLevel.LENIENT:
            base_prompt += "\n\n–£–†–û–í–ï–ù–¨ –ü–†–û–í–ï–†–ö–ò: –ú–Ø–ì–ö–ò–ô - –ó–∞—Å—á–∏—Ç—ã–≤–∞–π —á–∞—Å—Ç–∏—á–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã."
        elif self.strictness == StrictnessLevel.STRICT:
            base_prompt += "\n\n–£–†–û–í–ï–ù–¨ –ü–†–û–í–ï–†–ö–ò: –°–¢–†–û–ì–ò–ô - –ü—Ä–∏–º–µ–Ω—è–π –°–¢–†–û–ì–ò–ï –∫—Ä–∏—Ç–µ—Ä–∏–∏ –§–ò–ü–ò. –¢—Ä–µ–±—É–π –ø–æ–ª–Ω–æ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è."
        elif self.strictness == StrictnessLevel.EXPERT:
            base_prompt += "\n\n–£–†–û–í–ï–ù–¨ –ü–†–û–í–ï–†–ö–ò: –≠–ö–°–ü–ï–†–¢–ù–´–ô - –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–ê–Ø —Å—Ç—Ä–æ–≥–æ—Å—Ç—å. –õ—é–±—ã–µ –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç–∏ —Å–Ω–∏–∂–∞—é—Ç –±–∞–ª–ª."
        
        return base_prompt
    
    async def evaluate(
        self, 
        answer: str, 
        topic: Dict[str, Any],
        user_id: Optional[int] = None
    ) -> EvaluationResult:
        """–û—Ü–µ–Ω–∏–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–¥–∞–Ω–∏–µ 25."""
        
        if not self.ai_service:
            return self._get_fallback_result()
        
        try:
            # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è –æ—Ü–µ–Ω–∫–∏
            eval_prompt = self._build_evaluation_prompt(answer, topic)
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º async with –¥–ª—è ai_service
            async with self.ai_service as service:
                result = await service.get_completion(
                    prompt=eval_prompt,
                    system_prompt=self.get_system_prompt(),
                    temperature=self.get_temperature()
                )
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å
            if not result["success"]:
                logger.error(f"AI service error: {result.get('error', 'Unknown error')}")
                return self._get_fallback_result()
            
            response = result["text"]
            
            # –ü–∞—Ä—Å–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            parsed_result = self._parse_ai_response(response)
            
            # –í–∞–ª–∏–¥–∏—Ä—É–µ–º –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –æ—Ü–µ–Ω–∫–∏
            validated_result = self._validate_scores(parsed_result)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            return self._create_evaluation_result(validated_result, topic)
            
        except Exception as e:
            logger.error(f"Error during AI evaluation: {e}", exc_info=True)
            return self._get_fallback_result()
    
    def _build_evaluation_prompt(self, answer: str, topic: Dict) -> str:
        """–°—Ç—Ä–æ–∏—Ç –û–ë–ù–û–í–õ–Å–ù–ù–´–ô –ø—Ä–æ–º–ø—Ç –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –æ—Ç–≤–µ—Ç–∞."""
        task_text = topic.get('task_text', '')
        
        # –†–∞–∑–±–∏—Ä–∞–µ–º —á–∞—Å—Ç–∏ –∑–∞–¥–∞–Ω–∏—è –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        parts = topic.get('parts', {})
        part1 = parts.get('part1', '')
        part2 = parts.get('part2', '')
        part3 = parts.get('part3', '')
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        requires_russia = any(keyword in task_text.lower() or 
                            keyword in part2.lower() or 
                            keyword in part3.lower() 
                            for keyword in ['—Ä—Ñ', '—Ä–æ—Å—Å–∏–∏', '—Ä–æ—Å—Å–∏–π—Å–∫', '–≤ —Ä–æ—Å—Å–∏–∏', '–≤ —Ä—Ñ'])
        
        prompt = f"""–û—Ü–µ–Ω–∏ –æ—Ç–≤–µ—Ç —É—á–µ–Ω–∏–∫–∞ –Ω–∞ –∑–∞–¥–∞–Ω–∏–µ 25.

–ó–ê–î–ê–ù–ò–ï:
{task_text}

–ß–∞—Å—Ç–∏ –∑–∞–¥–∞–Ω–∏—è:
1) {part1}
2) {part2}
3) {part3}

–û–¢–í–ï–¢ –£–ß–ï–ù–ò–ö–ê:
{answer}

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
–ü–û–®–ê–ì–û–í–´–ô –ê–õ–ì–û–†–ò–¢–ú –ü–†–û–í–ï–†–ö–ò:
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

–®–ê–ì 1: –ü–†–û–í–ï–†–ö–ê –ö1 (–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ)

1.1. –ü–æ–¥—Å—á–∏—Ç–∞–π –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –≤ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–∏
     ‚Üí –ï—Å–ª–∏ 1 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–µ ‚Üí 0 –±–∞–ª–ª–æ–≤
     
1.2. –ü—Ä–æ–≤–µ—Ä—å —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω–Ω–æ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π (5+ —Å–ª–æ–≤ –∫–∞–∂–¥–æ–µ)
     ‚Üí –ï—Å–ª–∏ –Ω–µ—Ç ‚Üí —Å–Ω–∏–∂–∞–π –æ—Ü–µ–Ω–∫—É
     
1.3. –ü—Ä–æ–≤–µ—Ä—å –Ω–∞–ª–∏—á–∏–µ –û–ë–©–ï–°–¢–í–û–í–ï–î–ß–ï–°–ö–ò–• –¢–ï–†–ú–ò–ù–û–í
     ‚Üí –ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ –±—ã—Ç–æ–≤–æ–π —è–∑—ã–∫ ‚Üí 0 –±–∞–ª–ª–æ–≤
     
1.4. –ü—Ä–æ–≤–µ—Ä—å —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ –ü–†–ò–ß–ò–ù–ù–û-–°–õ–ï–î–°–¢–í–ï–ù–ù–´–•/–§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–´–• —Å–≤—è–∑–µ–π
     ‚Üí –ò—â–∏ —Å–≤—è–∑–∫–∏: "–ø–æ—ç—Ç–æ–º—É", "—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ", "—Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç", "–ø—Ä–∏–≤–æ–¥–∏—Ç –∫"
     ‚Üí –ï—Å–ª–∏ —Å–≤—è–∑–∏ –Ω–µ —Ä–∞—Å–∫—Ä—ã—Ç—ã ‚Üí –º–∞–∫—Å–∏–º—É–º 1 –±–∞–ª–ª
     
1.5. –ü—Ä–æ–≤–µ—Ä—å –Ω–∞ –§–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –û–®–ò–ë–ö–ò
     ‚Üí –°–µ—Ä—å—ë–∑–Ω—ã–µ –æ—à–∏–±–∫–∏ ‚Üí 0 –±–∞–ª–ª–æ–≤
     ‚Üí –ú–µ–ª–∫–∏–µ –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç–∏ ‚Üí 1 –±–∞–ª–ª

‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

–®–ê–ì 2: –ü–†–û–í–ï–†–ö–ê –ö2 (–û—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å)

2.1. –û–ø—Ä–µ–¥–µ–ª–∏ —Ç—Ä–µ–±—É–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –∑–∞–¥–∞–Ω–∏—è
     ‚Üí –û–±—ã—á–Ω–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è 3 —ç–ª–µ–º–µ–Ω—Ç–∞
     
2.2. –ü—Ä–æ–≤–µ—Ä—å —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞
     ‚Üí –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω –û–¢–î–ï–õ–¨–ù–´–ú –ø—É–Ω–∫—Ç–æ–º
     ‚Üí –î–æ–ª–∂–Ω–∞ –±—ã—Ç—å —è–≤–Ω–∞—è –Ω—É–º–µ—Ä–∞—Ü–∏—è: "1. ... 2. ... 3. ..."
     ‚Üí –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –æ–¥–Ω–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é ‚Üí –ù–ï –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è
     
2.3. –ü–æ–¥—Å—á–∏—Ç–∞–π –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
     ‚Üí –ï—Å–ª–∏ –º–µ–Ω—å—à–µ —Ç—Ä–µ–±—É–µ–º–æ–≥–æ ‚Üí 0 –±–∞–ª–ª–æ–≤
     
2.4. –ü—Ä–æ–≤–µ—Ä—å –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –Ω–∞ –ö–û–†–†–ï–ö–¢–ù–û–°–¢–¨
     ‚Üí –§–∞–∫—Ç–∏—á–µ—Å–∫–∏ –≤–µ—Ä–µ–Ω?
     ‚Üí –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–∏–ø—É —Ç—Ä–µ–±—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞?
     
2.5. {"–ü–†–û–í–ï–†–¨ –†–û–°–°–ò–ô–°–ö–ò–ô –ö–û–ù–¢–ï–ö–°–¢ (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û!):" if requires_russia else ""}
     {"‚Üí –í–°–ï —ç–ª–µ–º–µ–Ω—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –†–æ—Å—Å–∏–∏" if requires_russia else ""}
     {"‚Üí –ü—Ä–∏–º–µ—Ä—ã –ù–ï–ü–†–ê–í–ò–õ–¨–ù–´–• —ç–ª–µ–º–µ–Ω—Ç–æ–≤: –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–µ –ø–∞—Ä—Ç–∏–∏, –∑–∞–∫–æ–Ω—ã –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω" if requires_russia else ""}
     {"‚Üí –ü—Ä–∏–º–µ—Ä—ã –ü–†–ê–í–ò–õ–¨–ù–´–• —ç–ª–µ–º–µ–Ω—Ç–æ–≤: –ï–¥–∏–Ω–∞—è –†–æ—Å—Å–∏—è, –ö–ü–†–§, –õ–î–ü–†, –ù–æ–≤—ã–µ –ª—é–¥–∏, –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–∞—è –†–æ—Å—Å–∏—è" if requires_russia else ""}
     
2.6. –ü—Ä–æ–≤–µ—Ä—å –Ω–∞ –ù–ï–í–ï–†–ù–´–ï –ø–æ–∑–∏—Ü–∏–∏
     ‚Üí –ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã –û–î–ù–ê –Ω–µ–≤–µ—Ä–Ω–∞—è ‚Üí 0 –±–∞–ª–ª–æ–≤

2.7. –ó–ê–ü–û–ú–ù–ò: –∫–∞–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ –ö2 –û–®–ò–ë–û–ß–ù–´–ï (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ö3!)

‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

–®–ê–ì 3: –ü–†–û–í–ï–†–ö–ê –ö3 (–ü—Ä–∏–º–µ—Ä—ã)

3.1. –ü–æ–¥—Å—á–∏—Ç–∞–π –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–º–µ—Ä–æ–≤

3.2. –ü—Ä–æ–≤–µ—Ä—å –†–ê–ó–í–Å–†–ù–£–¢–û–°–¢–¨ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–º–µ—Ä–∞
     ‚Üí –ü–æ–ª–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å –¥–µ—Ç–∞–ª—è–º–∏? ‚úì
     ‚Üí –°–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–µ ("–≤—ã–±–æ—Ä—ã –≤ –ì–æ—Å–¥—É–º—É")? ‚úó
     ‚Üí –ú–∏–Ω–∏–º—É–º: "[–ö–¢–û] [–ß–¢–û –°–î–ï–õ–ê–õ] [–ì–î–ï/–ö–û–ì–î–ê] [–†–ï–ó–£–õ–¨–¢–ê–¢]"
     
3.3. {"–ü–†–û–í–ï–†–¨ –†–û–°–°–ò–ô–°–ö–ò–ô –ö–û–ù–¢–ï–ö–°–¢ (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û!):" if requires_russia else ""}
     {"‚Üí –ö–∞–∂–¥—ã–π –ø—Ä–∏–º–µ—Ä –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ —Ä–µ–∞–ª–∏–∏" if requires_russia else ""}
     {"‚Üí '–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ Z' –≤–º–µ—Å—Ç–æ –†–æ—Å—Å–∏–∏ ‚Üí –ù–ï –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è" if requires_russia else ""}
     {"‚Üí –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã ‚Üí –ù–ï –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è" if requires_russia else ""}
     
3.4. –ü—Ä–æ–≤–µ—Ä—å, –∏–ª–ª—é—Å—Ç—Ä–∏—Ä—É—é—Ç –ª–∏ –ø—Ä–∏–º–µ—Ä—ã –†–ê–ó–ù–´–ï —Ñ—É–Ω–∫—Ü–∏–∏/–∞—Å–ø–µ–∫—Ç—ã
     ‚Üí –ï—Å–ª–∏ 2-3 –ø—Ä–∏–º–µ—Ä–∞ –æ–± –û–î–ù–û–ô —Ñ—É–Ω–∫—Ü–∏–∏ ‚Üí –∑–∞—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –∫–∞–∫ –û–î–ò–ù –ø—Ä–∏–º–µ—Ä
     ‚Üí –ü—Ä–∏–º–µ—Ä: –≤—Å–µ —Ç—Ä–∏ –ø—Ä–æ "—ç–ª–µ–∫—Ç–æ—Ä–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é" ‚Üí 1 –±–∞–ª–ª, –Ω–µ 3!
     
3.5. –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ü—Ä–æ–≤–µ—Ä—å —Å–≤—è–∑—å —Å –ö2!
     ‚Üí –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –≤ –ö2 –û–®–ò–ë–û–ß–ù–´–ô, —Ç–æ –ø—Ä–∏–º–µ—Ä –∫ –Ω–µ–º—É –ù–ï –ó–ê–°–ß–ò–¢–´–í–ê–ï–¢–°–Ø
     ‚Üí –ü—Ä–∏–º–µ—Ä: –µ—Å–ª–∏ –≤ –ö2 —É–∫–∞–∑–∞–Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –ø–∞—Ä—Ç–∏—è, —Ç–æ –ø—Ä–∏–º–µ—Ä –ø—Ä–æ –Ω–µ—ë ‚Üí 0 –±–∞–ª–ª–æ–≤
     
3.6. –ü—Ä–æ–≤–µ—Ä—å –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ø—Ä–∏–º–µ—Ä—ã (–µ—Å–ª–∏ >3)
     ‚Üí –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏ –≤ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö ‚Üí –º–∞–∫—Å–∏–º—É–º 1 –±–∞–ª–ª –∑–∞ –ö3!
     
3.7. –ü—Ä–æ–≤–µ—Ä—å —Ñ–∞–∫—Ç–∏—á–µ—Å–∫—É—é –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –ø—Ä–∏–º–µ—Ä–æ–≤

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

–í–µ—Ä–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:
{{
    "k1_score": 0-2,
    "k1_comment": "–¥–µ—Ç–∞–ª—å–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å —É–∫–∞–∑–∞–Ω–∏–µ–º, —á—Ç–æ —É—á—Ç–µ–Ω–æ/–Ω–µ —É—á—Ç–µ–Ω–æ",
    "k2_score": 0-1,
    "k2_comment": "–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ –æ—Ç–≤–µ—Ç—É, –∫–∞–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤–µ—Ä–Ω—ã/–Ω–µ–≤–µ—Ä–Ω—ã",
    "k2_elements": [{{"element": "–Ω–∞–∑–≤–∞–Ω–∏–µ", "is_correct": true/false, "comment": "–ø–æ—á–µ–º—É"}}],
    "k3_score": 0-3,
    "k3_comment": "–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ –ø—Ä–∏–º–µ—Ä–∞–º",
    "k3_examples": [
        {{
            "number": 1,
            "text": "–∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞",
            "is_valid": true/false,
            "is_expanded": true/false,
            "matches_russian_context": true/false,
            "function": "–Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏/–∞—Å–ø–µ–∫—Ç–∞",
            "related_k2_element": "—ç–ª–µ–º–µ–Ω—Ç –∏–∑ –ö2",
            "related_k2_element_correct": true/false,
            "comment": "–ø–æ—á–µ–º—É –∑–∞—Å—á–∏—Ç–∞–Ω –∏–ª–∏ –Ω–µ –∑–∞—Å—á–∏—Ç–∞–Ω"
        }}
    ],
    "total_score": 0-6,
    "general_feedback": "–æ–±—â–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π",
    "suggestions": ["–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å–æ–≤–µ—Ç 1", "–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å–æ–≤–µ—Ç 2"],
    "factual_errors": ["–æ—à–∏–±–∫–∞ 1", "–æ—à–∏–±–∫–∞ 2"]
}}

–í–ê–ñ–ù–û: 
- –ë—É–¥—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–µ—Ç–∞–ª–µ–Ω –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö
- –î–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–µ–∑–∞—Å—á–∏—Ç–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞/–ø—Ä–∏–º–µ—Ä–∞ –æ–±—ä—è—Å–Ω–∏ –ü–û–ß–ï–ú–£
- –î–∞–≤–∞–π –ö–û–ù–ö–†–ï–¢–ù–´–ï —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é
- –ü—Ä–æ–≤–µ—Ä—è–π —Å–≤—è–∑—å –ö2 –∏ –ö3!
- {"–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–π —Ä–æ—Å—Å–∏–π—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç!" if requires_russia else ""}"""
        
        return prompt
    
    def _parse_ai_response(self, response: str) -> Dict:
        """–ü–∞—Ä—Å–∏—Ç –æ—Ç–≤–µ—Ç AI."""
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ JSON –≤ –æ—Ç–≤–µ—Ç–µ
            import re
            json_match = re.search(r'\{.*\}', response, re.DOTALL)
            if json_match:
                return json.loads(json_match.group())
            else:
                # –ï—Å–ª–∏ JSON –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å —Ç–µ–∫—Å—Ç
                return self._parse_text_response(response)
        except Exception as e:
            logger.error(f"Failed to parse AI response: {e}")
            return {}
    
    def _validate_scores(self, result: Dict) -> Dict:
        """–í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ—Ç –æ—Ü–µ–Ω–∫–∏."""
        validated = result.copy()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ö1 (0-2)
        k1 = validated.get('k1_score', 0)
        validated['k1_score'] = max(0, min(2, int(k1)))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ö2 (0-1)
        k2 = validated.get('k2_score', 0)
        validated['k2_score'] = max(0, min(1, int(k2)))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ö3 (0-3)
        k3 = validated.get('k3_score', 0)
        validated['k3_score'] = max(0, min(3, int(k3)))
        
        # –í–ê–ñ–ù–û: –í—Å–µ–≥–¥–∞ –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–∏–π –±–∞–ª–ª –∫–∞–∫ —Å—É–º–º—É –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤
        validated['total_score'] = (
            validated['k1_score'] + 
            validated['k2_score'] + 
            validated['k3_score']
        )
        
        return validated
    
    def _create_evaluation_result(self, result: Dict, topic: Dict) -> Task25EvaluationResult:
        """–°–æ–∑–¥–∞—ë—Ç –∏—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ü–µ–Ω–∫–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π format_feedback."""
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –±–∞–ª–ª—ã
        scores = {
            'k1_score': result.get('k1_score', 0),
            'k2_score': result.get('k2_score', 0),
            'k3_score': result.get('k3_score', 0)
        }
        
        # –í–ê–ñ–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É–º–º—É –±–∞–ª–ª–æ–≤ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º, –∞ –Ω–µ total_score –æ—Ç AI
        total_score = scores['k1_score'] + scores['k2_score'] + scores['k3_score']
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –±–∞–ª–ª–æ–≤
        if total_score >= 5:
            feedback = "üéâ –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –û—Ç–≤–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤—Å–µ–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º."
        elif total_score >= 3:
            feedback = "üëç –•–æ—Ä–æ—à–æ! –ï—Å—Ç—å –Ω–µ–±–æ–ª—å—à–∏–µ –Ω–µ–¥–æ—á—ë—Ç—ã."
        else:
            feedback = "üìù –ù—É–∂–Ω–æ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å –æ—Ç–≤–µ—Ç. –ò–∑—É—á–∏—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏."
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –µ—Å–ª–∏ –µ—Å—Ç—å (–Ω–æ –Ω–µ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º feedback –ø–æ–ª–Ω–æ—Å—Ç—å—é)
        if result.get('general_feedback') and total_score >= 3:
            feedback += f"\n\n{result['general_feedback']}"
        
        # –°–æ–∑–¥–∞—ë–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
        detailed_feedback = {
            'k1_comment': result.get('k1_comment', ''),
            'k2_comment': result.get('k2_comment', ''),
            'k3_comment': result.get('k3_comment', ''),
            'k3_examples_found': result.get('k3_examples_found', [])
        }
        
        # –°–æ–∑–¥–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        eval_result = Task25EvaluationResult(
            criteria_scores=scores,
            total_score=total_score,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ—Å—á–∏—Ç–∞–Ω–Ω—ã–π –±–∞–ª–ª
            max_score=6,
            feedback=feedback,
            detailed_feedback=detailed_feedback,
            suggestions=result.get('suggestions', []),
            factual_errors=result.get('factual_errors', [])
        )
        
        return eval_result
    
    def _get_fallback_result(self) -> EvaluationResult:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–∞–∑–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ AI."""
        return EvaluationResult(
            criteria_scores={'k1_score': 0, 'k2_score': 0, 'k3_score': 0},
            total_score=0,
            max_score=6,
            feedback="‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é.",
            detailed_feedback=None,
            suggestions=["–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –ø–æ–∑–∂–µ"],
            factual_errors=None
        )

    def _parse_text_response(self, response: str) -> Dict:
        """–ü–∞—Ä—Å–∏—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç AI –µ—Å–ª–∏ JSON –Ω–µ —É–¥–∞–ª—Å—è."""
        result = {
            'k1_score': 0,
            'k2_score': 0,
            'k3_score': 0,
            'total_score': 0,
            'general_feedback': '',
            'k1_comment': '',
            'k2_comment': '',
            'k3_comment': '',
            'k3_examples_found': [],
            'suggestions': [],
            'factual_errors': []
        }
        
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –±–∞–ª–ª—ã –ø–æ –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º
            import re
            
            # –ö1 (0-2 –±–∞–ª–ª–∞)
            k1_match = re.search(r'–ö1.*?(\d+)\s*–±–∞–ª–ª', response, re.IGNORECASE)
            if k1_match:
                result['k1_score'] = min(2, int(k1_match.group(1)))
            
            # –ö2 (0-1 –±–∞–ª–ª)
            k2_match = re.search(r'–ö2.*?(\d+)\s*–±–∞–ª–ª', response, re.IGNORECASE)
            if k2_match:
                result['k2_score'] = min(1, int(k2_match.group(1)))
            
            # –ö3 (0-3 –±–∞–ª–ª–∞)
            k3_match = re.search(r'–ö3.*?(\d+)\s*–±–∞–ª–ª', response, re.IGNORECASE)
            if k3_match:
                result['k3_score'] = min(3, int(k3_match.group(1)))
            
            # –û–±—â–∏–π –±–∞–ª–ª
            total_match = re.search(r'(?:–ò—Ç–æ–≥|–û–±—â|–í—Å–µ–≥–æ).*?(\d+).*?–±–∞–ª–ª', response, re.IGNORECASE)
            if total_match:
                result['total_score'] = min(6, int(total_match.group(1)))
            else:
                result['total_score'] = result['k1_score'] + result['k2_score'] + result['k3_score']
            
            # –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –æ–±—â–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
            result['general_feedback'] = response[:500] if len(response) > 500 else response
            
        except Exception as e:
            logger.error(f"Error parsing text response: {e}")
            result['general_feedback'] = "–û—Ç–≤–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω, –Ω–æ –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω."
        
        return result


def format_evaluation_feedback(result: EvaluationResult, topic: Dict = None) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ü–µ–Ω–∫–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    
    Args:
        result: –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ü–µ–Ω–∫–∏
        topic: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–º–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        
    Returns:
        –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    """
    # –ï—Å–ª–∏ —É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –µ—Å—Ç—å –º–µ—Ç–æ–¥ format_feedback, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
    if hasattr(result, 'format_feedback'):
        return result.format_feedback()
    
    # –ò–Ω–∞—á–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä—É—á–Ω—É—é
    text = f"üìä <b>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏</b>\n\n"
    
    if topic:
        text += f"<b>–¢–µ–º–∞:</b> {topic.get('title', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}\n"
        text += f"{'‚îÄ' * 30}\n\n"
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º result.criteria_scores
    if hasattr(result, 'criteria_scores') and result.criteria_scores:
        text += "<b>–ë–∞–ª–ª—ã –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º:</b>\n"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –∫–ª—é—á–µ–π
        k1_score = result.criteria_scores.get('k1_score', result.criteria_scores.get('–ö1', 0))
        k2_score = result.criteria_scores.get('k2_score', result.criteria_scores.get('–ö2', 0))
        k3_score = result.criteria_scores.get('k3_score', result.criteria_scores.get('–ö3', 0))
        
        text += f"–ö1 (–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ): {k1_score}/2\n"
        text += f"–ö2 (–û—Ç–≤–µ—Ç): {k2_score}/1\n"
        text += f"–ö3 (–ü—Ä–∏–º–µ—Ä—ã): {k3_score}/3\n"
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –±–∞–ª–ª
    text += f"\n<b>–ò—Ç–æ–≥–æ: {result.total_score}/{result.max_score} –±–∞–ª–ª–æ–≤</b>\n\n"
    
    # –û—Å–Ω–æ–≤–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
    if result.feedback:
        text += f"{result.feedback}\n"
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º detailed_feedback
    if hasattr(result, 'detailed_feedback') and result.detailed_feedback:
        if 'k1_comment' in result.detailed_feedback:
            text += f"\n<b>–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ:</b> {result.detailed_feedback['k1_comment']}\n"
        
        if 'k2_comment' in result.detailed_feedback:
            text += f"\n<b>–û—Ç–≤–µ—Ç:</b> {result.detailed_feedback['k2_comment']}\n"
        
        if 'k3_comment' in result.detailed_feedback:
            text += f"\n<b>–ü—Ä–∏–º–µ—Ä—ã:</b> {result.detailed_feedback['k3_comment']}\n"
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    if hasattr(result, 'suggestions') and result.suggestions:
        text += "\nüí° <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</b>\n"
        for suggestion in result.suggestions:
            text += f"‚Ä¢ {suggestion}\n"
    
    # –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
    if hasattr(result, 'factual_errors') and result.factual_errors:
        text += "\n‚ö†Ô∏è <b>–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ:</b>\n"
        for error in result.factual_errors:
            if isinstance(error, dict):
                text += f"‚Ä¢ {error.get('error', str(error))}"
                if 'correction' in error:
                    text += f" ‚Üí {error['correction']}"
                text += "\n"
            else:
                text += f"‚Ä¢ {error}\n"
    
    return text