# payment/consent_handler.py - –ù–æ–≤—ã–π –º–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–≥–ª–∞—Å–∏—è –Ω–∞ –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ

import logging
from datetime import datetime, timedelta
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, CallbackQueryHandler, ConversationHandler
from telegram.constants import ParseMode
from typing import Dict, Optional

logger = logging.getLogger(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
CONSENT_WAITING = 1
CONSENT_CONFIRMED = 2

class AutoRenewalConsent:
    """–ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–≥–ª–∞—Å–∏–µ–º –Ω–∞ –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ."""
    
    def __init__(self):
        self.user_consents: Dict[int, Dict] = {}
    
    async def show_auto_renewal_consent(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É —Å–æ–≥–ª–∞—Å–∏—è –Ω–∞ –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ."""
        query = update.callback_query
        await query.answer()
        
        user_id = update.effective_user.id
        plan_data = context.user_data.get('selected_plan_data', {})
        plan_name = plan_data.get('name', '–ü–æ–¥–ø–∏—Å–∫–∞')
        price = plan_data.get('price_rub', 0)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        self.user_consents[user_id] = {
            'checkbox_state': False,
            'timestamp': datetime.now()
        }
        
        text = f"""üîÑ <b>–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–¥–ª–µ–Ω–∏—è</b>

üìã <b>–£—Å–ª–æ–≤–∏—è –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏—è:</b>

üí∞ <b>–°—É–º–º–∞ —Å–ø–∏—Å–∞–Ω–∏—è:</b> {price} ‚ÇΩ
üìÖ <b>–ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å:</b> –ï–∂–µ–º–µ—Å—è—á–Ω–æ (–∫–∞–∂–¥—ã–µ 30 –¥–Ω–µ–π)
‚è∞ <b>–î–∞—Ç–∞ –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–æ–¥–ª–µ–Ω–∏—è:</b> {(datetime.now() + timedelta(days=30)).strftime('%d.%m.%Y')}

<b>–ß—Ç–æ –≤–∫–ª—é—á–∞–µ—Ç –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ:</b>
‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–ø–∏—Å–∞–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü
‚úÖ –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º
‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∑–∞ 3 –¥–Ω—è –¥–æ —Å–ø–∏—Å–∞–Ω–∏—è
‚úÖ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–º–µ–Ω—ã –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç

‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b>
‚Ä¢ –°–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
‚Ä¢ –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è —á–µ—Ä–µ–∑ /auto_renewal
‚Ä¢ –ü—Ä–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–µ —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ–¥–ø–∏—Å–∫–∞ –±—É–¥–µ—Ç –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
‚Ä¢ –ü–æ—Å–ª–µ 3 –Ω–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–∞–µ—Ç—Å—è

üìû <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –æ—Ç–º–µ–Ω–∞:</b>
‚Ä¢ –ö–æ–º–∞–Ω–¥–∞ /auto_renewal - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ–º
‚Ä¢ –ö–æ–º–∞–Ω–¥–∞ /support - —Å–≤—è–∑—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
‚Ä¢ Email: support@yourdomain.com

<b>–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–∞—à–µ —Å–æ–≥–ª–∞—Å–∏–µ:</b>"""
        
        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —á–µ–∫-–±–æ–∫—Å–æ–º
        checkbox_emoji = "‚òëÔ∏è" if self.user_consents[user_id]['checkbox_state'] else "‚¨ú"
        
        keyboard = [
            [InlineKeyboardButton(
                f"{checkbox_emoji} –Ø —Å–æ–≥–ª–∞—Å–µ–Ω(–Ω–∞) —Å —É—Å–ª–æ–≤–∏—è–º–∏ –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏—è",
                callback_data="toggle_consent_checkbox"
            )],
            [
                InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏ –æ–ø–ª–∞—Ç–∏—Ç—å", 
                                   callback_data="confirm_with_auto_renewal"),
                InlineKeyboardButton("‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è", 
                                   callback_data="decline_auto_renewal")
            ],
            [InlineKeyboardButton("üìÑ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ", 
                                callback_data="show_user_agreement")]
        ]
        
        await query.edit_message_text(
            text,
            parse_mode=ParseMode.HTML,
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
        
        return CONSENT_WAITING
    
    async def toggle_checkbox(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–µ–∫-–±–æ–∫—Å–∞."""
        query = update.callback_query
        user_id = update.effective_user.id
        
        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        if user_id in self.user_consents:
            self.user_consents[user_id]['checkbox_state'] = not self.user_consents[user_id]['checkbox_state']
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —á–µ–∫-–±–æ–∫—Å–∞
            await self.show_auto_renewal_consent(update, context)
            await query.answer("‚úÖ –û—Ç–º–µ—á–µ–Ω–æ" if self.user_consents[user_id]['checkbox_state'] else "–°–Ω—è—Ç–æ")
        else:
            await query.answer("–û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ.")
    
    async def confirm_with_consent(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—É —Å –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ–º –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–≥–ª–∞—Å–∏—è."""
        query = update.callback_query
        user_id = update.effective_user.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —á–µ–∫-–±–æ–∫—Å –æ—Ç–º–µ—á–µ–Ω
        if user_id not in self.user_consents or not self.user_consents[user_id]['checkbox_state']:
            await query.answer(
                "‚ö†Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–º–µ—Ç–∏—Ç—å —Å–æ–≥–ª–∞—Å–∏–µ —Å —É—Å–ª–æ–≤–∏—è–º–∏ –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏—è",
                show_alert=True
            )
            return CONSENT_WAITING
        
        await query.answer("‚úÖ –°–æ–≥–ª–∞—Å–∏–µ –ø–æ–ª—É—á–µ–Ω–æ")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–≥–ª–∞—Å–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        await self.save_consent_to_db(user_id, context)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏—è
        context.user_data['enable_auto_renewal'] = True
        context.user_data['consent_timestamp'] = datetime.now()
        context.user_data['consent_ip'] = query.message.chat.id  # –ú–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å IP –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ–ø–ª–∞—Ç–µ
        from .handlers import handle_payment_confirmation_with_recurrent
        return await handle_payment_confirmation_with_recurrent(update, context)
    
    async def decline_auto_renewal(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û—Ç–∫–∞–∑ –æ—Ç –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏—è - –ø–µ—Ä–µ—Ö–æ–¥ –∫ –æ–±—ã—á–Ω–æ–π –æ–ø–ª–∞—Ç–µ."""
        query = update.callback_query
        await query.answer()
        
        user_id = update.effective_user.id
        
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å–æ–≥–ª–∞—Å–∏–∏
        if user_id in self.user_consents:
            del self.user_consents[user_id]
        
        context.user_data['enable_auto_renewal'] = False
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ–±—ã—á–Ω–æ–π –æ–ø–ª–∞—Ç–µ –±–µ–∑ –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏—è
        text = """üí≥ <b>–û–ø–ª–∞—Ç–∞ –±–µ–∑ –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏—è</b>

–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–∞–∑–æ–≤—É—é –æ–ø–ª–∞—Ç—É –±–µ–∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–¥–ª–µ–Ω–∏—è.

–ü–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –≤–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–æ–¥–ª–∏—Ç—å –µ—ë –≤—Ä—É—á–Ω—É—é.

–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–ø–ª–∞—Ç—É?"""
        
        keyboard = [
            [
                InlineKeyboardButton("‚úÖ –û–ø–ª–∞—Ç–∏—Ç—å", callback_data="confirm_payment"),
                InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_payment")
            ],
            [InlineKeyboardButton("üîÑ –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏—é", 
                                callback_data="back_to_auto_renewal")]
        ]
        
        await query.edit_message_text(
            text,
            parse_mode=ParseMode.HTML,
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
        
        return ConversationHandler.END
    
    async def save_consent_to_db(self, user_id: int, context: ContextTypes.DEFAULT_TYPE):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–æ–≥–ª–∞—Å–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö."""
        try:
            import aiosqlite
            from .subscription_manager import SubscriptionManager
            
            subscription_manager = context.bot_data.get('subscription_manager', SubscriptionManager())
            
            async with aiosqlite.connect(subscription_manager.database_file) as conn:
                # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–≥–ª–∞—Å–∏–π –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
                await conn.execute("""
                    CREATE TABLE IF NOT EXISTS auto_renewal_consents (
                        id INTEGER PRIMARY KEY AUTOINCREMENT,
                        user_id INTEGER NOT NULL,
                        plan_id TEXT,
                        amount INTEGER,
                        consent_text TEXT,
                        ip_address TEXT,
                        user_agent TEXT,
                        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                        FOREIGN KEY (user_id) REFERENCES users(user_id)
                    )
                """)
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–≥–ª–∞—Å–∏–µ
                plan_data = context.user_data.get('selected_plan_data', {})
                await conn.execute("""
                    INSERT INTO auto_renewal_consents 
                    (user_id, plan_id, amount, consent_text, created_at)
                    VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)
                """, (
                    user_id,
                    context.user_data.get('selected_plan'),
                    plan_data.get('price_rub', 0) * 100,  # –í –∫–æ–ø–µ–π–∫–∞—Ö
                    f"–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ {plan_data.get('name')} –∑–∞ {plan_data.get('price_rub')} —Ä—É–±. –µ–∂–µ–º–µ—Å—è—á–Ω–æ"
                ))
                
                await conn.commit()
                logger.info(f"Consent saved for user {user_id}")
                
        except Exception as e:
            logger.error(f"Error saving consent: {e}")
    
    async def show_user_agreement(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ."""
        query = update.callback_query
        await query.answer()
        
        text = """üìÑ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ</b>

<b>1. –û–±—â–∏–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è</b>
1.1. –ù–∞—Å—Ç–æ—è—â–µ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ —Ä–µ–≥—É–ª–∏—Ä—É–µ—Ç —É—Å–ª–æ–≤–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏.
1.2. –ê–∫—Ç–∏–≤–∏—Ä—É—è –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å —É—Å–ª–æ–≤–∏—è–º–∏ –¥–∞–Ω–Ω–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è.

<b>2. –£—Å–ª–æ–≤–∏—è –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏—è</b>
2.1. –°–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–∞–∂–¥—ã–µ 30 –¥–Ω–µ–π.
2.2. –°—É–º–º–∞ —Å–ø–∏—Å–∞–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞.
2.3. –°–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã.

<b>3. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</b>
3.1. –ó–∞ 3 –¥–Ω—è –¥–æ —Å–ø–∏—Å–∞–Ω–∏—è –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.
3.2. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤ Telegram.

<b>4. –û—Ç–º–µ–Ω–∞ –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏—è</b>
4.1. –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è.
4.2. –î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /auto_renewal.
4.3. –û—Ç–º–µ–Ω–∞ –≤—Å—Ç—É–ø–∞–µ—Ç –≤ —Å–∏–ª—É –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ.

<b>5. –í–æ–∑–≤—Ä–∞—Ç—ã</b>
5.1. –í–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Å–æ–≥–ª–∞—Å–Ω–æ –ø–æ–ª–∏—Ç–∏–∫–µ –≤–æ–∑–≤—Ä–∞—Ç–æ–≤.
5.2. –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: /support

<b>6. –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å</b>
6.1. –í—ã –Ω–µ—Å–µ—Ç–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –Ω–∞–ª–∏—á–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –∫–∞—Ä—Ç–µ.
6.2. –ü—Ä–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–µ —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ–¥–ø–∏—Å–∫–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è.

<b>7. –ö–æ–Ω—Ç–∞–∫—Ç</b>
–ü–æ–¥–¥–µ—Ä–∂–∫–∞: @obshestvonapalcahsupport
        
        keyboard = [[
            InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_consent")
        ]]
        
        await query.edit_message_text(
            text,
            parse_mode=ParseMode.HTML,
            reply_markup=InlineKeyboardMarkup(keyboard)
        )


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
def get_consent_handlers():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å–æ–≥–ª–∞—Å–∏—è –Ω–∞ –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ."""
    consent_manager = AutoRenewalConsent()
    
    return [
        CallbackQueryHandler(
            consent_manager.show_auto_renewal_consent,
            pattern="^setup_auto_renewal$"
        ),
        CallbackQueryHandler(
            consent_manager.toggle_checkbox,
            pattern="^toggle_consent_checkbox$"
        ),
        CallbackQueryHandler(
            consent_manager.confirm_with_consent,
            pattern="^confirm_with_auto_renewal$"
        ),
        CallbackQueryHandler(
            consent_manager.decline_auto_renewal,
            pattern="^decline_auto_renewal$"
        ),
        CallbackQueryHandler(
            consent_manager.show_user_agreement,
            pattern="^show_user_agreement$"
        )
    ]