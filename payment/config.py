# payment/config.py - –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å –¥–≤—É–º—è —Ç–∞—Ä–∏—Ñ–∞–º–∏
"""–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ–¥—É–ª—è –æ–ø–ª–∞—Ç—ã —Å –ø—Ä–æ–±–Ω—ã–º –ø–µ—Ä–∏–æ–¥–æ–º –∏ –ø–æ–ª–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π."""
import os
import logging
from decimal import Decimal
from datetime import datetime, timedelta, timezone
from typing import Dict, Any, List, Optional
from dotenv import load_dotenv

load_dotenv()

logger = logging.getLogger(__name__)

# ==================== TINKOFF SETTINGS ====================
TINKOFF_TERMINAL_KEY = os.getenv('TINKOFF_TERMINAL_KEY')
TINKOFF_SECRET_KEY = os.getenv('TINKOFF_SECRET_KEY')
TINKOFF_API_URL = 'https://securepay.tinkoff.ru/v2/'

# ==================== WEBHOOK SETTINGS ====================
WEBHOOK_BASE_URL = os.getenv('WEBHOOK_BASE_URL', 'https://your-domain.com')
WEBHOOK_PATH = '/payment/webhook'
WEBHOOK_HOST = '0.0.0.0'
WEBHOOK_PORT = 8080
# –ò—Å–ø–æ–ª—å–∑—É–µ–º WEBHOOK_BASE_URL –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤–º–µ—Å—Ç–æ —Ö–∞—Ä–¥–∫–æ–¥–∞
WEBHOOK_URL = f"{WEBHOOK_BASE_URL}{WEBHOOK_PATH}"

# ==================== ADMIN SETTINGS ====================
PAYMENT_ADMIN_CHAT_ID = int(os.getenv('PAYMENT_ADMIN_CHAT_ID', '0'))
DATABASE_PATH = 'quiz_async.db'

# ==================== SUBSCRIPTION MODE ====================
SUBSCRIPTION_MODE = 'modular'  # –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
FREE_MODULES = ['test_part']  # –¢–µ—Å—Ç–æ–≤–∞—è —á–∞—Å—Ç—å –í–°–ï–ì–î–ê –±–µ—Å–ø–ª–∞—Ç–Ω–∞

logger.info(f"Payment module loaded with SUBSCRIPTION_MODE = {SUBSCRIPTION_MODE}")

# ==================== –£–ü–†–û–©–ï–ù–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ü–û–î–ü–ò–°–û–ö ====================
MODULE_PLANS = {
    # –ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥
    'trial_7days': {
        'name': 'üéÅ –ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥',
        'description': '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –Ω–∞ 7 –¥–Ω–µ–π –∑–∞ 1 —Ä—É–±–ª—å',
        'detailed_description': [
            '‚Ä¢ –î–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –∑–∞–¥–∞–Ω–∏—è–º –≤—Ç–æ—Ä–æ–π —á–∞—Å—Ç–∏',
            '‚Ä¢ –ò–ò-–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥–æ–≥–æ –æ—Ç–≤–µ—Ç–∞',
            '‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏',
            '‚Ä¢ –ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –Ω–∞ 7 –¥–Ω–µ–π'
        ],
        'price_rub': 1,
        'duration_days': 7,
        'modules': ['test_part', 'task19', 'task20', 'task24', 'task25'],
        'type': 'trial',
        'features': [
            '‚úÖ –í—Å–µ –∑–∞–¥–∞–Ω–∏—è –≤—Ç–æ—Ä–æ–π —á–∞—Å—Ç–∏',
            '‚úÖ –ò–ò-–ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤',
            '‚úÖ –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –Ω–∞ –Ω–µ–¥–µ–ª—é',
            'üí° –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞'
        ]
    },
    
    # –ü–æ–ª–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞
    'package_full': {
        'name': 'üëë –ü–æ–ª–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞',
        'description': '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –∑–∞–¥–∞–Ω–∏—è–º',
        'price_rub': 249,
        'duration_days': 30,
        'modules': ['test_part', 'task19', 'task20', 'task24', 'task25'],
        'type': 'package',
        'features': [
            '‚úÖ –í—Å–µ –∑–∞–¥–∞–Ω–∏—è –≤—Ç–æ—Ä–æ–π —á–∞—Å—Ç–∏ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ò–ò',
            '‚úÖ –ó–∞–¥–∞–Ω–∏–µ 19 ‚Äî –ü—Ä–∏–º–µ—Ä—ã –∏ –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏',
            '‚úÖ –ó–∞–¥–∞–Ω–∏–µ 20 ‚Äî –†–∞–±–æ—Ç–∞ —Å —Ç–µ–∫—Å—Ç–æ–º',
            '‚úÖ –ó–∞–¥–∞–Ω–∏–µ 24 ‚Äî –°–ª–æ–∂–Ω—ã–π –ø–ª–∞–Ω',
            '‚úÖ –ó–∞–¥–∞–Ω–∏–µ 25 ‚Äî –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏',
            'üí° –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –±–∞–ª–ª—ã –Ω–∞ –ï–ì–≠!'
        ],
        'detailed_description': [
            '‚Ä¢ –ó–∞–¥–∞–Ω–∏–µ 19: –ù–∞—É—á–∏—Å—å –ø–æ–¥–±–∏—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∫ –ª—é–±–æ–π —Ç–µ–æ—Ä–∏–∏',
            '‚Ä¢ –ó–∞–¥–∞–Ω–∏–µ 20: –ü–∏—à–∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ü–µ–Ω—è—Ç –Ω–∞ –º–∞–∫—Å–∏–º—É–º',
            '‚Ä¢ –ó–∞–¥–∞–Ω–∏–µ 24: –°–æ—Å—Ç–∞–≤–ª—è–π –ø–ª–∞–Ω—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–≤–∞–ª–∏—Ç—å',
            '‚Ä¢ –ó–∞–¥–∞–Ω–∏–µ 25: –û–±–æ—Å–Ω–æ–≤—ã–≤–∞–π —Ç–∞–∫, —á—Ç–æ–±—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ—Å—Ç–∞–≤–∏–ª 6/6',
            '‚Ä¢ –ò–ò –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –∫–∞–∫ —Å—Ç—Ä–æ–≥–∏–π —ç–∫—Å–ø–µ—Ä—Ç –§–ò–ü–ò',
            '‚Ä¢ –°–º–æ—Ç—Ä–∏ —ç—Ç–∞–ª–æ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –∏ –ø–æ–≤—Ç–æ—Ä—è–π —É—Å–ø–µ—Ö'
        ]
    }
}

# ==================== –°–ö–ò–î–ö–ò –ó–ê –î–õ–ò–¢–ï–õ–¨–ù–û–°–¢–¨ ====================
# –†–∞—Å—á–µ—Ç:
# 1 –º–µ—Å—è—Ü: 249‚ÇΩ (–±–µ–∑ —Å–∫–∏–¥–∫–∏)
# 3 –º–µ—Å—è—Ü–∞: 672‚ÇΩ (10% —Å–∫–∏–¥–∫–∞ = 224‚ÇΩ/–º–µ—Å, —ç–∫–æ–Ω–æ–º–∏—è 75‚ÇΩ)
# 6 –º–µ—Å—è—Ü–µ–≤: 1270‚ÇΩ (15% —Å–∫–∏–¥–∫–∞ = 212‚ÇΩ/–º–µ—Å, —ç–∫–æ–Ω–æ–º–∏—è 224‚ÇΩ)

DURATION_DISCOUNTS = {
    1: {
        'multiplier': 1.0,  # –ë–µ–∑ —Å–∫–∏–¥–∫–∏
        'label': '1 –º–µ—Å—è—Ü',
        'discount_percent': 0,
        'badge': ''
    },
    3: {
        'multiplier': 2.7,  # 672‚ÇΩ –≤–º–µ—Å—Ç–æ 747‚ÇΩ (—Å–∫–∏–¥–∫–∞ 10%)
        'label': '3 –º–µ—Å—è—Ü–∞',
        'discount_percent': 10,
        'badge': 'üí∞ –í—ã–≥–æ–¥–∞',
        'savings': 75  # –≠–∫–æ–Ω–æ–º–∏—è –≤ —Ä—É–±–ª—è—Ö
    },
    6: {
        'multiplier': 5.1,  # 1270‚ÇΩ –≤–º–µ—Å—Ç–æ 1494‚ÇΩ (—Å–∫–∏–¥–∫–∞ 15%)
        'label': '6 –º–µ—Å—è—Ü–µ–≤',
        'discount_percent': 15,
        'badge': 'üî• –õ—É—á—à–∞—è —Ü–µ–Ω–∞',
        'savings': 224  # –≠–∫–æ–Ω–æ–º–∏—è –≤ —Ä—É–±–ª—è—Ö
    }
}

# ==================== –í–´–ë–û–† –ê–ö–¢–ò–í–ù–û–ô –°–ò–°–¢–ï–ú–´ ====================
SUBSCRIPTION_PLANS = MODULE_PLANS
logger.info(f"Using simplified MODULE_PLANS with {len(MODULE_PLANS)} plans")
logger.info(f"Available plans: {list(SUBSCRIPTION_PLANS.keys())}")

# ==================== –û–ü–ò–°–ê–ù–ò–Ø –ú–û–î–£–õ–ï–ô –î–õ–Ø UI ====================
MODULE_DESCRIPTIONS = {
    'test_part': {
        'emoji': 'üìù',
        'short_name': '–¢–µ—Å—Ç–æ–≤–∞—è —á–∞—Å—Ç—å',
        'full_name': '–ó–∞–¥–∞–Ω–∏—è 1-16 (—Ç–µ—Å—Ç–æ–≤–∞—è —á–∞—Å—Ç—å)',
        'description': '–í—Å–µ –∑–∞–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–π —á–∞—Å—Ç–∏ –ï–ì–≠ —Å –∞–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–æ–π',
        'features': [
            '–ë–æ–ª–µ–µ 1000 –∑–∞–¥–∞–Ω–∏–π',
            '–í—Å–µ —Ç–µ–º—ã –∫–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞',
            '–ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞',
            '–ü–æ–¥—Ä–æ–±–Ω—ã–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è'
        ],
        'is_free': True
    },
    'task19': {
        'emoji': 'üéØ',
        'short_name': '–ó–∞–¥–∞–Ω–∏–µ 19',
        'full_name': '–ó–∞–¥–∞–Ω–∏–µ 19 ‚Äî –ü—Ä–∏–º–µ—Ä—ã –∏ –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏',
        'description': '–ù–∞—É—á–∏—Å—å –ø–æ–¥–±–∏—Ä–∞—Ç—å —É–±–µ–¥–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∫ –ª—é–±–æ–π —Ç–µ–æ—Ä–∏–∏',
        'features': [
            '–£—á–∏—Å—å –Ω–∞ –ª—É—á—à–∏—Ö –ø—Ä–∏–º–µ—Ä–∞—Ö',
            '–ò–ò –æ—Ü–µ–Ω–∏—Ç —Ç–≤–æ–∏ –ø—Ä–∏–º–µ—Ä—ã',
            '–ë–∞–∑–∞ –≥–æ—Ç–æ–≤—ã—Ö —Ä–µ—à–µ–Ω–∏–π',
            '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é'
        ],
        'is_free': False
    },
    'task20': {
        'emoji': 'üìñ',
        'short_name': '–ó–∞–¥–∞–Ω–∏–µ 20',
        'full_name': '–ó–∞–¥–∞–Ω–∏–µ 20 ‚Äî –†–∞–±–æ—Ç–∞ —Å —Ç–µ–∫—Å—Ç–æ–º',
        'description': '–§–æ—Ä–º—É–ª–∏—Ä—É–π –∞—Ä–≥—É–º–µ–Ω—Ç—ã, –∑–∞ –∫–æ—Ç–æ—Ä—ã–µ –¥–∞—é—Ç –º–∞–∫—Å–∏–º—É–º –±–∞–ª–ª–æ–≤',
        'features': [
            '–†–∞–∑–±–∏—Ä–∞–π —Ç–µ–∫—Å—Ç—ã –∫–∞–∫ –ø—Ä–æ—Ñ–∏',
            '–ü–∏—à–∏ —É–±–µ–¥–∏—Ç–µ–ª—å–Ω—ã–µ —Å—É–∂–¥–µ–Ω–∏—è',
            '–ò—Å–ø–æ–ª—å–∑—É–π –≥–æ—Ç–æ–≤—ã–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏',
            '–ò–ò –ø—Ä–æ–≤–µ—Ä–∏—Ç —Ç–≤–æ—é –ª–æ–≥–∏–∫—É'
        ],
        'is_free': False
    },
    'task24': {
        'emoji': 'üíé',
        'short_name': '–ó–∞–¥–∞–Ω–∏–µ 24',
        'full_name': '–ó–∞–¥–∞–Ω–∏–µ 24 ‚Äî –°–ª–æ–∂–Ω—ã–π –ø–ª–∞–Ω',
        'description': '–°–æ—Å—Ç–∞–≤–ª—è–π –ø–ª–∞–Ω—ã, –∫–æ—Ç–æ—Ä—ã–µ —ç–∫—Å–ø–µ—Ä—Ç –Ω–µ —Å–º–æ–∂–µ—Ç –∑–∞–≤–∞–ª–∏—Ç—å',
        'features': [
            '–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç—ã –∫–∞–∫ –ø—Ä–æ—Ñ–∏',
            '–ò–ò –ø—Ä–æ–≤–µ—Ä–∏—Ç –∫–∞–∂–¥—ã–π –ø—É–Ω–∫—Ç',
            '–°–º–æ—Ç—Ä–∏ —ç—Ç–∞–ª–æ–Ω–Ω—ã–µ –ø–ª–∞–Ω—ã',
            '–ü–æ–ª—É—á–∞–π –æ—Ü–µ–Ω–∫—É –∫–∞–∫ –Ω–∞ –ï–ì–≠'
        ],
        'is_free': False
    },
    'task25': {
        'emoji': '‚úçÔ∏è',
        'short_name': '–ó–∞–¥–∞–Ω–∏–µ 25',
        'full_name': '–ó–∞–¥–∞–Ω–∏–µ 25 ‚Äî –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ',
        'description': '–û–±–æ—Å–Ω–æ–≤—ã–≤–∞–π —Ç–∞–∫ —É–±–µ–¥–∏—Ç–µ–ª—å–Ω–æ, —á—Ç–æ —ç–∫—Å–ø–µ—Ä—Ç –ø–æ—Å—Ç–∞–≤–∏—Ç 6/6',
        'features': [
            '–ü–æ–¥–±–∏—Ä–∞–π –ø—Ä–∏–º–µ—Ä—ã –∏–∑ —Ä–∞–∑–Ω—ã—Ö —Å—Ñ–µ—Ä',
            '–ò–ò –æ—Ü–µ–Ω–∏—Ç —Ç–≤–æ—ë –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ',
            '–ö–æ–Ω–∫—Ä–µ—Ç–∏–∑–∏—Ä—É–π —Ç–æ—á–Ω–æ –∏ —á—ë—Ç–∫–æ',
            '–ü–æ–ª—É—á–∞–π —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å'
        ],
        'is_free': False
    }
}

# ==================== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ====================

def get_plan_price_kopecks(plan_id: str, months: int = 1) -> int:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ü–µ–Ω—É –ø–ª–∞–Ω–∞ –≤ –∫–æ–ø–µ–π–∫–∞—Ö –¥–ª—è Tinkoff API.
    
    Args:
        plan_id: ID –ø–ª–∞–Ω–∞ (trial_7days –∏–ª–∏ package_full)
        months: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—è—Ü–µ–≤
    
    Returns:
        –¶–µ–Ω–∞ –≤ –∫–æ–ø–µ–π–∫–∞—Ö
    """
    plan = SUBSCRIPTION_PLANS.get(plan_id)
    if not plan:
        raise ValueError(f"Unknown plan: {plan_id}")
    
    base_price = plan['price_rub']
    
    # –î–ª—è –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ –≤—Å–µ–≥–¥–∞ 1‚ÇΩ
    if plan_id == 'trial_7days':
        return 100  # 1‚ÇΩ –≤ –∫–æ–ø–µ–π–∫–∞—Ö
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–Ω–æ–∂–∏—Ç–µ–ª—å –¥–ª—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    if months in DURATION_DISCOUNTS:
        multiplier = DURATION_DISCOUNTS[months]['multiplier']
        total_price = int(base_price * multiplier)
    else:
        total_price = base_price * months
    
    return total_price * 100  # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –∫–æ–ø–µ–π–∫–∏


def get_subscription_end_date(plan_id: str, months: int = 1) -> datetime:
    """
    –í—ã—á–∏—Å–ª—è–µ—Ç –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –ø–ª–∞–Ω–∞.
    
    Args:
        plan_id: ID –ø–ª–∞–Ω–∞
        months: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—è—Ü–µ–≤
        
    Returns:
        –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
    """
    plan = SUBSCRIPTION_PLANS.get(plan_id)
    if not plan:
        raise ValueError(f"Unknown plan: {plan_id}")
    
    if plan_id == 'trial_7days':
        return datetime.now(timezone.utc) + timedelta(days=7)
    else:
        days = 30 * months
        return datetime.now(timezone.utc) + timedelta(days=days)


def calculate_subscription_price(plan_id: str, months: int = 1) -> int:
    """
    –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Ü–µ–Ω—É –ø–æ–¥–ø–∏—Å–∫–∏ —Å —É—á–µ—Ç–æ–º —Å—Ä–æ–∫–∞ –∏ —Å–∫–∏–¥–æ–∫.
    
    Args:
        plan_id: ID –ø–ª–∞–Ω–∞
        months: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—è—Ü–µ–≤
        
    Returns:
        –¶–µ–Ω–∞ –≤ –†–£–ë–õ–Ø–• (–Ω–µ –≤ –∫–æ–ø–µ–π–∫–∞—Ö!)
    """
    plan = SUBSCRIPTION_PLANS.get(plan_id)
    if not plan:
        raise ValueError(f"Unknown plan: {plan_id}")
    
    base_price = plan['price_rub']
    
    # –î–ª—è –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ –≤—Å–µ–≥–¥–∞ 1‚ÇΩ
    if plan_id == 'trial_7days':
        return 1
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–∫–∏–¥–∫–∏ –¥–ª—è –º–Ω–æ–≥–æ–º–µ—Å—è—á–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫
    if months in DURATION_DISCOUNTS:
        multiplier = DURATION_DISCOUNTS[months]['multiplier']
        total_price = int(base_price * multiplier)
    else:
        total_price = base_price * months
    
    return total_price


def get_plan_modules(plan_id: str) -> List[str]:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –º–æ–¥—É–ª–µ–π –¥–ª—è –ø–ª–∞–Ω–∞.
    
    Args:
        plan_id: ID –ø–ª–∞–Ω–∞
        
    Returns:
        –°–ø–∏—Å–æ–∫ –∫–æ–¥–æ–≤ –º–æ–¥—É–ª–µ–π
    """
    plan = SUBSCRIPTION_PLANS.get(plan_id)
    if not plan:
        return []
    
    modules = plan.get('modules', [])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –º–æ–¥—É–ª–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    for free_module in FREE_MODULES:
        if free_module not in modules:
            modules.append(free_module)
    
    return modules


def format_price(price_rub: int) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ü–µ–Ω—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è."""
    return f"{price_rub}‚ÇΩ"


def is_module_free(module_code: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –º–æ–¥—É–ª—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º."""
    return module_code in FREE_MODULES


def get_module_info(module_code: str) -> Dict[str, Any]:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥—É–ª–µ –¥–ª—è UI.
    
    Args:
        module_code: –ö–æ–¥ –º–æ–¥—É–ª—è
        
    Returns:
        –°–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –º–æ–¥—É–ª–µ
    """
    if module_code in MODULE_DESCRIPTIONS:
        info = MODULE_DESCRIPTIONS[module_code].copy()
        info['price'] = 0 if module_code in FREE_MODULES else None
        return info
    
    # –î–µ—Ñ–æ–ª—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    return {
        'emoji': 'üìö',
        'short_name': module_code,
        'full_name': module_code,
        'description': '–ú–æ–¥—É–ª—å',
        'features': [],
        'is_free': module_code in FREE_MODULES,
        'price': 0 if module_code in FREE_MODULES else None
    }


def get_plan_info(plan_id: str) -> Optional[Dict[str, Any]]:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞–Ω–µ –ø–æ–¥–ø–∏—Å–∫–∏.
    
    Args:
        plan_id: ID –ø–ª–∞–Ω–∞
        
    Returns:
        –°–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–ª–∞–Ω–µ –∏–ª–∏ None
    """
    return SUBSCRIPTION_PLANS.get(plan_id)


# ==================== LEGACY SUPPORT ====================
# –î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å–æ —Å—Ç–∞—Ä—ã–º –∫–æ–¥–æ–º
LEGACY_SUBSCRIPTION_PLANS = {}

# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
__all__ = [
    'TINKOFF_TERMINAL_KEY',
    'TINKOFF_SECRET_KEY',
    'TINKOFF_API_URL',
    'WEBHOOK_URL',
    'PAYMENT_ADMIN_CHAT_ID',
    'DATABASE_PATH',
    'SUBSCRIPTION_MODE',
    'FREE_MODULES',
    'MODULE_PLANS',
    'SUBSCRIPTION_PLANS',
    'DURATION_DISCOUNTS',
    'MODULE_DESCRIPTIONS',
    'get_plan_price_kopecks',
    'get_subscription_end_date',
    'calculate_subscription_price',
    'get_plan_modules',
    'format_price',
    'is_module_free',
    'get_module_info',
    'get_plan_info'
]