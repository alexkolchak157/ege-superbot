# payment/config.py - –§–ò–ù–ê–õ–¨–ù–ê–Ø –≤–µ—Ä—Å–∏—è —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∞–º–∏ –§–ò–ü–ò
"""–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ–¥—É–ª—è –æ–ø–ª–∞—Ç—ã —Å —Ç–æ—á–Ω—ã–º–∏ –æ–ø–∏—Å–∞–Ω–∏—è–º–∏ –∑–∞–¥–∞–Ω–∏–π –ï–ì–≠."""
import os
import logging
from decimal import Decimal
from datetime import datetime, timedelta, timezone
from typing import Dict, Any, List, Optional
from dotenv import load_dotenv

load_dotenv()

logger = logging.getLogger(__name__)

# ==================== TINKOFF SETTINGS ====================
TINKOFF_TERMINAL_KEY = os.getenv('TINKOFF_TERMINAL_KEY')
TINKOFF_SECRET_KEY = os.getenv('TINKOFF_SECRET_KEY')
TINKOFF_API_URL = 'https://securepay.tinkoff.ru/v2/'

# ==================== WEBHOOK SETTINGS ====================
WEBHOOK_BASE_URL = os.getenv('WEBHOOK_BASE_URL', 'https://your-domain.com')
WEBHOOK_PATH = '/payment/webhook'
WEBHOOK_HOST = '0.0.0.0'
WEBHOOK_PORT = 8080
WEBHOOK_URL = 'https://xn--80aaabfr9bnfdntn4cn1bzd.xn--p1ai/payment-notification'

# ==================== ADMIN SETTINGS ====================
PAYMENT_ADMIN_CHAT_ID = int(os.getenv('PAYMENT_ADMIN_CHAT_ID', '0'))
DATABASE_PATH = 'quiz_async.db'

# ==================== SUBSCRIPTION MODE ====================
SUBSCRIPTION_MODE = os.getenv('SUBSCRIPTION_MODE', 'modular')  # 'unified' –∏–ª–∏ 'modular'
FREE_MODULES = ['test_part']  # –¢–µ—Å—Ç–æ–≤–∞—è —á–∞—Å—Ç—å –ë–ï–°–ü–õ–ê–¢–ù–ê

logger.info(f"Payment module loaded with SUBSCRIPTION_MODE = {SUBSCRIPTION_MODE}")

# ==================== –°–¢–ê–†–´–ï –ü–õ–ê–ù–´ (–¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏) ====================
LEGACY_SUBSCRIPTION_PLANS = {
    'basic_month': {
        'name': 'ü•â –ë–∞–∑–æ–≤–∞—è (1 –º–µ—Å—è—Ü)',
        'description': '–î–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –Ω–∞ 30 –¥–Ω–µ–π',
        'price_rub': 299,
        'duration_days': 30,
        'modules': ['test_part'],
        'features': [
            '‚úÖ –í—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è',
            '‚úÖ –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
            '‚úÖ –î–æ 100 –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å',
            '‚ùå –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞'
        ]
    },
    'pro_month': {
        'name': 'ü•á Pro (1 –º–µ—Å—è—Ü)',
        'description': '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –Ω–∞ 30 –¥–Ω–µ–π',
        'price_rub': 599,
        'duration_days': 30,
        'modules': ['test_part', 'task19', 'task20', 'task25'],
        'features': [
            '‚úÖ –í—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è',
            '‚úÖ –ó–∞–¥–∞–Ω–∏—è –≤—Ç–æ—Ä–æ–π —á–∞—Å—Ç–∏',
            '‚úÖ –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ',
            '‚úÖ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞'
        ]
    },
    'pro_ege': {
        'name': 'üëë Pro –¥–æ –ï–ì–≠',
        'description': '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –¥–æ –∫–æ–Ω—Ü–∞ –ï–ì–≠',
        'price_rub': 1999,
        'duration_until': datetime(2025, 6, 30, tzinfo=timezone.utc),
        'modules': ['test_part', 'task19', 'task20', 'task24', 'task25'],
        'features': [
            '‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ –¥–æ –ï–ì–≠',
            '‚úÖ –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ',
            '‚úÖ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
            '‚úÖ –ì–∞—Ä–∞–Ω—Ç–∏—è —Ä–∞–±–æ—Ç—ã –¥–æ –ï–ì–≠'
        ]
    }
}

# ==================== –ù–û–í–ê–Ø –ú–û–î–£–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –° –ö–û–†–†–ï–ö–¢–ù–´–ú–ò –§–û–†–ú–£–õ–ò–†–û–í–ö–ê–ú–ò ====================
MODULE_PLANS = {
    # –û—Ç–¥–µ–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏ —Å —Ç–æ—á–Ω—ã–º–∏ –æ–ø–∏—Å–∞–Ω–∏—è–º–∏ –ø–æ –§–ò–ü–ò
    'module_test': {
        'name': 'üìù –¢–µ—Å—Ç–æ–≤–∞—è —á–∞—Å—Ç—å',
        'description': '–ó–∞–¥–∞–Ω–∏—è 1-16 —Å –∞–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–æ–π',
        'detailed_description': [
            '‚Ä¢ –í—Å–µ –∑–∞–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–π —á–∞—Å—Ç–∏ –ï–ì–≠',
            '‚Ä¢ –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤',
            '‚Ä¢ –ü–æ–¥—Ä–æ–±–Ω—ã–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è —Ä–µ—à–µ–Ω–∏–π',
            '‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–µ–º–∞–º –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å'
        ],
        'price_rub': 0,  # –ë–ï–°–ü–õ–ê–¢–ù–û!
        'duration_days': 30,
        'modules': ['test_part'],
        'type': 'individual'  # –ò–°–ü–†–ê–í–õ–ï–ù–û!
    },
    
    'module_task19': {
        'name': 'üéØ –ó–∞–¥–∞–Ω–∏–µ 19',
        'description': '–ò–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏—Ö –ø–æ–ª–æ–∂–µ–Ω–∏–π –ø—Ä–∏–º–µ—Ä–∞–º–∏',
        'detailed_description': [
            '‚Ä¢ –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤, –ø—Ä–æ—Ü–µ—Å—Å–æ–≤, —è–≤–ª–µ–Ω–∏–π',
            '‚Ä¢ –ò–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏—Ö –ø–æ–ª–æ–∂–µ–Ω–∏–π —Ñ–∞–∫—Ç–∞–º–∏',
            '‚Ä¢ –ò–ò-–ø—Ä–æ–≤–µ—Ä–∫–∞ —Å —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑—å—é',
            '‚Ä¢ –ë–∞–∑–∞ —ç—Ç–∞–ª–æ–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ –≤—Å–µ–º —Ç–µ–º–∞–º'
        ],
        'price_rub': 199,
        'duration_days': 30,
        'modules': ['task19'],
        'type': 'individual'  # –ò–°–ü–†–ê–í–õ–ï–ù–û!
    },
    
    'module_task20': {
        'name': 'üìñ –ó–∞–¥–∞–Ω–∏–µ 20',
        'description': '–§–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å—É–∂–¥–µ–Ω–∏–π',
        'detailed_description': [
            '‚Ä¢ –§–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ü–µ–Ω–æ—á–Ω—ã—Ö —Å—É–∂–¥–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞',
            '‚Ä¢ –ê—Ä–≥—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏—Ö –≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏–π',
            '‚Ä¢ –û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Å–≤—è–∑–∏ –ø—Ä–∏–º–µ—Ä–æ–≤ —Å –ø—Ä–æ–±–ª–µ–º–∞—Ç–∏–∫–æ–π —Ç–µ–∫—Å—Ç–∞',
            '‚Ä¢ –ë–∞–Ω–∫ —Ç–∏–ø–æ–≤—ã—Ö —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫ –∏ –∫–ª–∏—à–µ'
        ],
        'price_rub': 199,
        'duration_days': 30,
        'modules': ['task20'],
        'type': 'individual'  # –ò–°–ü–†–ê–í–õ–ï–ù–û!
    },
    
    'module_task24': {
        'name': 'üíé –ó–∞–¥–∞–Ω–∏–µ 24',
        'description': '–°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ–∂–Ω–æ–≥–æ –ø–ª–∞–Ω–∞',
        'detailed_description': [
            '‚Ä¢ –°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ–∂–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç–æ–≥–æ –æ—Ç–≤–µ—Ç–∞',
            '‚Ä¢ –ú–∏–Ω–∏–º—É–º 3 –ø—É–Ω–∫—Ç–∞ —Å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π –≤ –ø–æ–¥–ø—É–Ω–∫—Ç–∞—Ö',
            '‚Ä¢ –≠–∫—Å–ø–µ—Ä—Ç–Ω–∞—è –ò–ò-–ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ –ø–æ–ª–Ω–æ—Ç—ã',
            '‚Ä¢ –ë–∞–∑–∞ —ç—Ç–∞–ª–æ–Ω–Ω—ã—Ö –ø–ª–∞–Ω–æ–≤ –ø–æ –≤—Å–µ–º —Ç–µ–º–∞–º –∫—É—Ä—Å–∞'
        ],
        'price_rub': 299,  # –ü—Ä–µ–º–∏—É–º –∑–∞–¥–∞–Ω–∏–µ
        'duration_days': 30,
        'modules': ['task24'],
        'type': 'individual'  # –ò–°–ü–†–ê–í–õ–ï–ù–û!
    },
    
    'module_task25': {
        'name': '‚úçÔ∏è –ó–∞–¥–∞–Ω–∏–µ 25',
        'description': '–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –∏ –∫–æ–Ω–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–∏–º–µ—Ä–∞–º–∏',
        'detailed_description': [
            '‚Ä¢ –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–ª–æ–∂–µ–Ω–∏—è',
            '‚Ä¢ –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç—Ä—ë—Ö –ø—Ä–∏–º–µ—Ä–æ–≤ –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ñ–µ—Ä',
            '‚Ä¢ –ö–æ–Ω–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏—è —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏—Ö –ø–æ–ª–æ–∂–µ–Ω–∏–π —Ñ–∞–∫—Ç–∞–º–∏',
            '‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–Ω–æ—Ç—ã –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –ø—Ä–∏–º–µ—Ä–æ–≤'
        ],
        'price_rub': 199,
        'duration_days': 30,
        'modules': ['task25'],
        'type': 'individual'  # –ò–°–ü–†–ê–í–õ–ï–ù–û!
    },
    
    # –ü–∞–∫–µ—Ç–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    'package_second': {
        'name': 'üìö –ü–∞–∫–µ—Ç ¬´–í—Ç–æ—Ä–∞—è —á–∞—Å—Ç—å¬ª',
        'description': '–û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è —Å —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–º –æ—Ç–≤–µ—Ç–æ–º',
        'price_rub': 499,  # –≠–∫–æ–Ω–æ–º–∏—è 98‚ÇΩ
        'duration_days': 30,
        'modules': ['task19', 'task20', 'task25'],
        'type': 'package',
        'features': [
            '‚úÖ –ó–∞–¥–∞–Ω–∏–µ 19 ‚Äî –ü—Ä–∏–º–µ—Ä—ã –∏ –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏',
            '‚úÖ –ó–∞–¥–∞–Ω–∏–µ 20 ‚Äî –†–∞–±–æ—Ç–∞ —Å —Ç–µ–∫—Å—Ç–æ–º',
            '‚úÖ –ó–∞–¥–∞–Ω–∏–µ 25 ‚Äî –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏',
            'üí∞ –≠–∫–æ–Ω–æ–º–∏—è 98‚ÇΩ/–º–µ—Å'
        ],
        'detailed_description': [
            '‚Ä¢ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è –≤—Ç–æ—Ä–æ–π —á–∞—Å—Ç–∏',
            '‚Ä¢ –ò–ò-–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥–æ–≥–æ –æ—Ç–≤–µ—Ç–∞',
            '‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏',
            '‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –±–∞–∑–µ —ç—Ç–∞–ª–æ–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤'
        ]
    },
    
    'package_full': {
        'name': 'üëë –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø',
        'description': '–í—Å–µ –∑–∞–¥–∞–Ω–∏—è –≤—Ç–æ—Ä–æ–π —á–∞—Å—Ç–∏ –ï–ì–≠',
        'price_rub': 799,  # –ù–û–í–ê–Ø –¶–ï–ù–ê! –ë—ã–ª–æ 999‚ÇΩ, —ç–∫–æ–Ω–æ–º–∏—è 97‚ÇΩ
        'duration_days': 30,
        'modules': ['task19', 'task20', 'task24', 'task25'],
        'type': 'package',
        'features': [
            '‚úÖ –í–°–ï –∑–∞–¥–∞–Ω–∏—è –≤—Ç–æ—Ä–æ–π —á–∞—Å—Ç–∏ (19-25)',
            '‚úÖ –ü—Ä–µ–º–∏—É–º –∑–∞–¥–∞–Ω–∏–µ 24 (—Å–ª–æ–∂–Ω—ã–π –ø–ª–∞–Ω)',
            '‚úÖ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —ç–∫—Å–ø–µ—Ä—Ç–∞',
            'üí∞ –≠–∫–æ–Ω–æ–º–∏—è 97‚ÇΩ/–º–µ—Å'
        ],
        'detailed_description': [
            '‚Ä¢ –ü–æ–ª–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ø–∏—Å—å–º–µ–Ω–Ω–æ–π —á–∞—Å—Ç–∏ –ï–ì–≠',
            '‚Ä¢ –ò–ò-–ø—Ä–æ–≤–µ—Ä–∫–∞ + —ç–∫—Å–ø–µ—Ä—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
            '‚Ä¢ –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫',
            '‚Ä¢ –ì–∞—Ä–∞–Ω—Ç–∏—è –ø–æ–≤—ã—à–µ–Ω–∏—è –±–∞–ª–ª–æ–≤'
        ]
    },
    
    # –ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥
    'trial_7days': {
        'name': 'üéÅ –ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥',
        'description': '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –Ω–∞ 7 –¥–Ω–µ–π',
        'price_rub': 1,
        'duration_days': 7,
        'modules': ['task19', 'task20', 'task24', 'task25'],
        'type': 'trial',
        'features': [
            '‚úÖ –í—Å–µ –∑–∞–¥–∞–Ω–∏—è –≤—Ç–æ—Ä–æ–π —á–∞—Å—Ç–∏',
            '‚úÖ –ò–ò-–ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤',
            '‚úÖ –ë–µ–∑ –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏—è',
            '‚ö° –ê–∫—Ç–∏–≤–∞—Ü–∏—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ'
        ]
    }
}

# ==================== –°–ö–ò–î–ö–ò –ó–ê –î–õ–ò–¢–ï–õ–¨–ù–û–°–¢–¨ ====================
DURATION_DISCOUNTS = {
    1: {
        'multiplier': 1.0, 
        'label': '1 –º–µ—Å—è—Ü',
        'discount_percent': 0
    },
    3: {
        'multiplier': 2.7,  # –°–∫–∏–¥–∫–∞ 10%
        'label': '3 –º–µ—Å—è—Ü–∞',
        'discount_percent': 10,
        'badge': 'üî• –í—ã–≥–æ–¥–Ω–æ'
    },
    6: {
        'multiplier': 5.1,  # –°–∫–∏–¥–∫–∞ 15%
        'label': '6 –º–µ—Å—è—Ü–µ–≤', 
        'discount_percent': 15,
        'badge': 'üíé –ü–æ–ø—É–ª—è—Ä–Ω–æ'
    },
    12: {
        'multiplier': 9.0,  # –°–∫–∏–¥–∫–∞ 25%
        'label': '12 –º–µ—Å—è—Ü–µ–≤',
        'discount_percent': 25,
        'badge': 'üëë –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤—ã–≥–æ–¥–∞'
    }
}

# ==================== –í–´–ë–û–† –ê–ö–¢–ò–í–ù–û–ô –°–ò–°–¢–ï–ú–´ ====================
if SUBSCRIPTION_MODE == 'modular':
    SUBSCRIPTION_PLANS = MODULE_PLANS
    logger.info(f"Using MODULE_PLANS with {len(MODULE_PLANS)} plans")
else:
    SUBSCRIPTION_PLANS = LEGACY_SUBSCRIPTION_PLANS
    logger.info(f"Using LEGACY_SUBSCRIPTION_PLANS with {len(LEGACY_SUBSCRIPTION_PLANS)} plans")

logger.info(f"Available plans: {list(SUBSCRIPTION_PLANS.keys())}")

# ==================== –û–ü–ò–°–ê–ù–ò–Ø –ú–û–î–£–õ–ï–ô –î–õ–Ø UI ====================
MODULE_DESCRIPTIONS = {
    'test_part': {
        'emoji': 'üìù',
        'short_name': '–¢–µ—Å—Ç–æ–≤–∞—è —á–∞—Å—Ç—å',
        'full_name': '–ó–∞–¥–∞–Ω–∏—è 1-16 (—Ç–µ—Å—Ç–æ–≤–∞—è —á–∞—Å—Ç—å)',
        'description': '–í—Å–µ –∑–∞–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–π —á–∞—Å—Ç–∏ –ï–ì–≠ —Å –∞–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–æ–π',
        'features': [
            '–ë–æ–ª–µ–µ 1000 –∑–∞–¥–∞–Ω–∏–π',
            '–í—Å–µ —Ç–µ–º—ã –∫–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞',
            '–ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞',
            '–ü–æ–¥—Ä–æ–±–Ω—ã–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è'
        ],
        'is_free': True
    },
    'task19': {
        'emoji': 'üéØ',
        'short_name': '–ó–∞–¥–∞–Ω–∏–µ 19',
        'full_name': '–ó–∞–¥–∞–Ω–∏–µ 19 ‚Äî –ü—Ä–∏–º–µ—Ä—ã –∏ –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏',
        'description': '–ò–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏—Ö –ø–æ–ª–æ–∂–µ–Ω–∏–π –ø—Ä–∏–º–µ—Ä–∞–º–∏',
        'features': [
            '–ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤',
            '–ò–ò-–ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤',
            '–ë–∞–∑–∞ —ç—Ç–∞–ª–æ–Ω–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π',
            '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å'
        ],
        'is_free': False
    },
    'task20': {
        'emoji': 'üìñ',
        'short_name': '–ó–∞–¥–∞–Ω–∏–µ 20',
        'full_name': '–ó–∞–¥–∞–Ω–∏–µ 20 ‚Äî –†–∞–±–æ—Ç–∞ —Å —Ç–µ–∫—Å—Ç–æ–º',
        'description': '–§–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å—É–∂–¥–µ–Ω–∏–π',
        'features': [
            '–ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞',
            '–§–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É–∂–¥–µ–Ω–∏–π',
            '–ë–∞–Ω–∫ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫',
            '–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ü–∏–∏'
        ],
        'is_free': False
    },
    'task24': {
        'emoji': 'üíé',
        'short_name': '–ó–∞–¥–∞–Ω–∏–µ 24',
        'full_name': '–ó–∞–¥–∞–Ω–∏–µ 24 ‚Äî –°–ª–æ–∂–Ω—ã–π –ø–ª–∞–Ω',
        'description': '–°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ–∂–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç–æ–≥–æ –æ—Ç–≤–µ—Ç–∞',
        'features': [
            '–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞',
            '–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–Ω–æ—Ç—ã –ø–ª–∞–Ω–∞',
            '–≠—Ç–∞–ª–æ–Ω–Ω—ã–µ –ø–ª–∞–Ω—ã',
            '–≠–∫—Å–ø–µ—Ä—Ç–Ω–∞—è –æ—Ü–µ–Ω–∫–∞'
        ],
        'is_free': False
    },
    'task25': {
        'emoji': '‚úçÔ∏è',
        'short_name': '–ó–∞–¥–∞–Ω–∏–µ 25',
        'full_name': '–ó–∞–¥–∞–Ω–∏–µ 25 ‚Äî –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ',
        'description': '–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –∏ –∫–æ–Ω–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–∏–º–µ—Ä–∞–º–∏',
        'features': [
            '–¢—Ä–∏ –ø—Ä–∏–º–µ—Ä–∞ –∏–∑ —Ä–∞–∑–Ω—ã—Ö —Å—Ñ–µ—Ä',
            '–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏—è',
            '–ö–æ–Ω–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏—è –ø–æ–ª–æ–∂–µ–Ω–∏–π',
            '–î–µ—Ç–∞–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å'
        ],
        'is_free': False
    }
}

# ==================== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ====================

def get_plan_price_kopecks(plan_id: str, months: int = 1, custom_plan_data: dict = None) -> int:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ü–µ–Ω—É –ø–ª–∞–Ω–∞ –≤ –∫–æ–ø–µ–π–∫–∞—Ö –¥–ª—è Tinkoff API.
    
    Args:
        plan_id: ID –ø–ª–∞–Ω–∞
        months: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—è—Ü–µ–≤
        custom_plan_data: –î–∞–Ω–Ω—ã–µ custom –ø–ª–∞–Ω–∞ (–µ—Å–ª–∏ –ø–ª–∞–Ω custom)
    
    Returns:
        –¶–µ–Ω–∞ –≤ –∫–æ–ø–µ–π–∫–∞—Ö
    """
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ custom –ø–ª–∞–Ω–æ–≤
    if plan_id.startswith('custom_') and custom_plan_data:
        base_price = custom_plan_data.get('price_rub', 0)
    else:
        plan = SUBSCRIPTION_PLANS.get(plan_id)
        if not plan:
            # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –≤ MODULE_PLANS
            if SUBSCRIPTION_MODE == 'modular':
                plan = MODULE_PLANS.get(plan_id)
            
            if not plan:
                raise ValueError(f"Unknown plan: {plan_id}")
        
        base_price = plan['price_rub']
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–Ω–æ–∂–∏—Ç–µ–ª—å –¥–ª—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    if months in DURATION_DISCOUNTS:
        multiplier = DURATION_DISCOUNTS[months]['multiplier']
        total_price = int(base_price * multiplier)
    else:
        total_price = base_price * months
    
    return total_price * 100  # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –∫–æ–ø–µ–π–∫–∏

def get_subscription_end_date(plan_id: str, months: int = 1) -> datetime:
    """
    –í—ã—á–∏—Å–ª—è–µ—Ç –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –ø–ª–∞–Ω–∞.
    
    Args:
        plan_id: ID –ø–ª–∞–Ω–∞
        months: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—è—Ü–µ–≤
        
    Returns:
        –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
    """
    plan = SUBSCRIPTION_PLANS.get(plan_id)
    if not plan:
        # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –≤ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –ø–ª–∞–Ω–∞—Ö
        plan = MODULE_PLANS.get(plan_id) or LEGACY_SUBSCRIPTION_PLANS.get(plan_id)
        if not plan:
            raise ValueError(f"Unknown plan: {plan_id}")
    
    if 'duration_until' in plan:
        return plan['duration_until']
    else:
        days = plan.get('duration_days', 30) * months
        return datetime.now(timezone.utc) + timedelta(days=days)

def calculate_subscription_price(plan_id: str, months: int = 1, custom_plan_data: dict = None) -> int:
    """
    –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Ü–µ–Ω—É –ø–æ–¥–ø–∏—Å–∫–∏ —Å —É—á–µ—Ç–æ–º —Å—Ä–æ–∫–∞ –∏ —Å–∫–∏–¥–æ–∫.
    
    Args:
        plan_id: ID –ø–ª–∞–Ω–∞
        months: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—è—Ü–µ–≤
        custom_plan_data: –î–∞–Ω–Ω—ã–µ custom –ø–ª–∞–Ω–∞
        
    Returns:
        –¶–µ–Ω–∞ –≤ –∫–æ–ø–µ–π–∫–∞—Ö
    """
    if plan_id.startswith('custom_') and custom_plan_data:
        base_price = custom_plan_data.get('price_rub', 0)
    else:
        plan = SUBSCRIPTION_PLANS.get(plan_id) or MODULE_PLANS.get(plan_id)
        if not plan:
            raise ValueError(f"Unknown plan: {plan_id}")
        base_price = plan['price_rub']
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–∫–∏–¥–∫–∏ –¥–ª—è –º–Ω–æ–≥–æ–º–µ—Å—è—á–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫
    if months in DURATION_DISCOUNTS:
        multiplier = DURATION_DISCOUNTS[months]['multiplier']
        total_price = int(base_price * multiplier)
    else:
        total_price = base_price * months
    
    return total_price * 100  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –∫–æ–ø–µ–π–∫–∞—Ö

def get_plan_modules(plan_id: str) -> List[str]:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –º–æ–¥—É–ª–µ–π –¥–ª—è –ø–ª–∞–Ω–∞.
    
    Args:
        plan_id: ID –ø–ª–∞–Ω–∞
        
    Returns:
        –°–ø–∏—Å–æ–∫ –∫–æ–¥–æ–≤ –º–æ–¥—É–ª–µ–π
    """
    plan = SUBSCRIPTION_PLANS.get(plan_id)
    if not plan:
        plan = MODULE_PLANS.get(plan_id) or LEGACY_SUBSCRIPTION_PLANS.get(plan_id)
    
    if not plan:
        return []
    
    modules = plan.get('modules', [])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –º–æ–¥—É–ª–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    for free_module in FREE_MODULES:
        if free_module not in modules:
            modules.append(free_module)
    
    return modules

def get_module_price(module_code: str) -> int:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ü–µ–Ω—É –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –º–æ–¥—É–ª—è.
    
    Args:
        module_code: –ö–æ–¥ –º–æ–¥—É–ª—è
        
    Returns:
        –¶–µ–Ω–∞ –≤ —Ä—É–±–ª—è—Ö
    """
    # –ò—â–µ–º –º–æ–¥—É–ª—å –≤ –ø–ª–∞–Ω–∞—Ö
    for plan_id, plan in MODULE_PLANS.items():
        if plan.get('type') == 'module' and module_code in plan.get('modules', []):
            return plan['price_rub']
    
    # –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ —Ü–µ–Ω—ã
    module_prices = {
        'test_part': 0,  # –ë–ï–°–ü–õ–ê–¢–ù–û
        'task19': 199,
        'task20': 199,
        'task24': 299,  # –ü—Ä–µ–º–∏—É–º
        'task25': 199
    }
    
    return module_prices.get(module_code, 0)

def get_custom_plan_price(modules: List[str], months: int = 1) -> Dict[str, Any]:
    """
    –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Ü–µ–Ω—É –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–∞ –º–æ–¥—É–ª–µ–π.
    
    Args:
        modules: –°–ø–∏—Å–æ–∫ –º–æ–¥—É–ª–µ–π
        months: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—è—Ü–µ–≤
        
    Returns:
        –°–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ü–µ–Ω–µ
    """
    # –§–∏–ª—å—Ç—Ä—É–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –º–æ–¥—É–ª–∏
    paid_modules = [m for m in modules if m not in FREE_MODULES]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤—ã–≥–æ–¥–Ω–µ–µ –ª–∏ –≤–∑—è—Ç—å –ø–∞–∫–µ—Ç
    if set(paid_modules) == {'task19', 'task20', 'task25'}:
        # –≠—Ç–æ –ø–∞–∫–µ—Ç "–í—Ç–æ—Ä–∞—è —á–∞—Å—Ç—å"
        return {
            'plan_id': 'package_second',
            'price_rub': MODULE_PLANS['package_second']['price_rub'],
            'is_package': True,
            'savings': 98  # –≠–∫–æ–Ω–æ–º–∏—è
        }
    elif set(paid_modules) == {'task19', 'task20', 'task24', 'task25'}:
        # –≠—Ç–æ –ø–æ–ª–Ω—ã–π –ø–∞–∫–µ—Ç
        return {
            'plan_id': 'package_full',
            'price_rub': MODULE_PLANS['package_full']['price_rub'],
            'is_package': True,
            'savings': 97  # –≠–∫–æ–Ω–æ–º–∏—è
        }
    
    # –°—á–∏—Ç–∞–µ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é —Ü–µ–Ω—É
    total = sum(get_module_price(m) for m in paid_modules)
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–∫–∏–¥–∫–∏ –∑–∞ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
    if months in DURATION_DISCOUNTS:
        multiplier = DURATION_DISCOUNTS[months]['multiplier']
        total_with_discount = int(total * multiplier)
    else:
        total_with_discount = total * months
    
    return {
        'plan_id': f'custom_{"_".join(sorted(paid_modules))}',
        'price_rub': total,
        'total_price': total_with_discount,
        'modules': paid_modules,
        'is_package': False,
        'savings': 0
    }

def format_price(price_rub: int) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ü–µ–Ω—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è."""
    return f"{price_rub:,}‚ÇΩ".replace(',', ' ')

def is_module_free(module_code: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –º–æ–¥—É–ª—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º."""
    return module_code in FREE_MODULES

def get_module_info(module_code: str) -> Dict[str, Any]:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥—É–ª–µ –¥–ª—è UI.
    
    Args:
        module_code: –ö–æ–¥ –º–æ–¥—É–ª—è
        
    Returns:
        –°–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –º–æ–¥—É–ª–µ
    """
    if module_code in MODULE_DESCRIPTIONS:
        info = MODULE_DESCRIPTIONS[module_code].copy()
        info['price'] = get_module_price(module_code)
        return info
    
    # –î–µ—Ñ–æ–ª—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    return {
        'emoji': 'üìö',
        'short_name': module_code,
        'full_name': module_code,
        'description': '–ú–æ–¥—É–ª—å',
        'features': [],
        'is_free': module_code in FREE_MODULES,
        'price': get_module_price(module_code)
    }