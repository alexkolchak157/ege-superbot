#!/bin/bash

# =====================================================
# –°–∫—Ä–∏–ø—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è EGE-–±–æ—Ç–∞
# =====================================================

BOT_DIR="/opt/ege-bot"
BACKUP_DIR="$BOT_DIR/backups"

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
echo -e "${BLUE}    üì• –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ EGE-–±–æ—Ç–∞${NC}"
echo -e "${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞
stop_bot() {
    echo -e "\n${YELLOW}‚èπÔ∏è  –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞...${NC}"
    
    # –ò—â–µ–º –ø—Ä–æ—Ü–µ—Å—Å
    bot_pid=$(pgrep -f "python.*core/app.py")
    
    if [ -n "$bot_pid" ]; then
        echo "–ù–∞–π–¥–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å: PID $bot_pid"
        kill -TERM $bot_pid
        sleep 5
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –ª–∏
        if ! kill -0 $bot_pid 2>/dev/null; then
            echo -e "${GREEN}‚úì –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
        else
            echo -e "${YELLOW}–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞...${NC}"
            kill -9 $bot_pid
        fi
    else
        echo "–ü—Ä–æ—Ü–µ—Å—Å –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –±—ç–∫–∞–ø—ã
show_backups() {
    echo -e "\n${YELLOW}üì¶ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –±—ç–∫–∞–ø—ã:${NC}\n"
    
    # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –±—ç–∫–∞–ø—ã
    all_backups=()
    for type in hourly daily manual; do
        if [ -d "$BACKUP_DIR/$type" ]; then
            while IFS= read -r backup; do
                if [ -n "$backup" ]; then
                    all_backups+=("$backup")
                fi
            done < <(find "$BACKUP_DIR/$type" -name "*.tar.gz" -type f 2>/dev/null)
        fi
    done
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ
    IFS=$'\n' sorted_backups=($(printf '%s\n' "${all_backups[@]}" | xargs ls -t 2>/dev/null))
    
    if [ ${#sorted_backups[@]} -eq 0 ]; then
        echo -e "${RED}–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±—ç–∫–∞–ø–æ–≤!${NC}"
        exit 1
    fi
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ (–º–∞–∫—Å–∏–º—É–º 15 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö)
    for i in "${!sorted_backups[@]}"; do
        if [ $i -ge 15 ]; then break; fi
        backup="${sorted_backups[$i]}"
        size=$(du -h "$backup" | cut -f1)
        date=$(stat -c %y "$backup" | cut -d' ' -f1,2 | cut -d'.' -f1)
        type=$(echo "$backup" | awk -F'/' '{print $(NF-1)}')
        echo "$((i+1))) [${type}] $(basename "$backup") ($size, $date)"
    done
    
    echo -e "\n${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –±—ç–∫–∞–ø–∞ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:${NC}"
    read -p "> " choice
    
    if [ "$choice" -ge 1 ] && [ "$choice" -le "${#sorted_backups[@]}" ]; then
        selected_backup="${sorted_backups[$((choice-1))]}"
        echo -e "\n${GREEN}–í—ã–±—Ä–∞–Ω: $(basename "$selected_backup")${NC}"
        return 0
    else
        echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
        exit 1
    fi
}

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
restore() {
    echo -e "\n${YELLOW}üì• –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞...${NC}"
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ç–µ–∫—É—â–∏—Ö —Ñ–∞–π–ª–æ–≤
    timestamp=$(date +%Y%m%d_%H%M%S)
    echo -e "${YELLOW}–°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø —Ç–µ–∫—É—â–∏—Ö —Ñ–∞–π–ª–æ–≤...${NC}"
    
    cd "$BOT_DIR"
    current_backup="$BACKUP_DIR/manual/before_restore_$timestamp.tar.gz"
    tar -czf "$current_backup" bot_persistence.pickle quiz_async.db .env data 2>/dev/null
    echo -e "${GREEN}‚úì –¢–µ–∫—É—â–∏–µ —Ñ–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: $(basename "$current_backup")${NC}"
    
    # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –±—ç–∫–∞–ø
    echo -e "\n${YELLOW}–†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –±—ç–∫–∞–ø–∞...${NC}"
    tar -xzf "$selected_backup" -C "$BOT_DIR"
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!${NC}"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        echo -e "\n${BLUE}–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:${NC}"
        [ -f "$BOT_DIR/bot_persistence.pickle" ] && echo "  ‚úì bot_persistence.pickle"
        [ -f "$BOT_DIR/quiz_async.db" ] && echo "  ‚úì quiz_async.db"
        [ -f "$BOT_DIR/.env" ] && echo "  ‚úì .env"
        [ -d "$BOT_DIR/data" ] && echo "  ‚úì data/"
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏!${NC}"
        exit 1
    fi
}

# –ì–ª–∞–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
echo -e "\n${RED}‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ë–æ—Ç –±—É–¥–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è!${NC}"
echo -e "–¢–µ–∫—É—â–∏–µ —Ñ–∞–π–ª—ã –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é."
read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): " confirm

if [ "$confirm" != "y" ]; then
    echo "–û—Ç–º–µ–Ω–µ–Ω–æ"
    exit 0
fi

# –í—ã–±–∏—Ä–∞–µ–º –±—ç–∫–∞–ø
show_backups

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞
stop_bot

# –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
restore

# –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
echo -e "\n${YELLOW}–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞? (y/n):${NC}"
read -p "> " start_bot

if [ "$start_bot" = "y" ]; then
    echo -e "${GREEN}–ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞...${NC}"
    cd "$BOT_DIR"
    nohup python3 core/app.py > logs/bot.log 2>&1 &
    echo -e "${GREEN}‚úì –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω (PID: $!)${NC}"
    echo -e "–õ–æ–≥–∏: tail -f $BOT_DIR/logs/bot.log"
fi

echo -e "\n${GREEN}‚úÖ –ì–æ—Ç–æ–≤–æ!${NC}"