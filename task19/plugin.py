"""–ü–ª–∞–≥–∏–Ω –¥–ª—è –∑–∞–¥–∞–Ω–∏—è 19."""

import logging
from telegram.ext import (
    ConversationHandler, CommandHandler, CallbackQueryHandler,
    MessageHandler, filters
)
from core.plugin_base import BotPlugin
from core import states
from . import handlers

logger = logging.getLogger(__name__)


class Task19Plugin(BotPlugin):
    code = "task19"
    title = "–ó–∞–¥–∞–Ω–∏–µ 19 (–ü—Ä–∏–º–µ—Ä—ã)"
    menu_priority = 15
    
    async def post_init(self, app):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–¥–∞–Ω–∏—è 19."""
        try:
            await handlers.init_task19_data()
            logger.info(f"Task19 plugin initialized successfully")
        except Exception as e:
            logger.error(f"Failed to initialize task19 data: {e}")
            # –ù–µ –ø–∞–¥–∞–µ–º, –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
            pass
    
    def entry_handler(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Ö–æ–¥–∞ –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
        return CallbackQueryHandler(
            handlers.entry_from_menu,
            pattern=f"^choose_{self.code}$"
        )

    def register_handlers(self, app):
        """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ callback'–æ–≤ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏."""
        from . import handlers
        
        conv_handler = ConversationHandler(
            entry_points=[
                CommandHandler("task19", handlers.cmd_task19),
                CallbackQueryHandler(handlers.practice_mode, pattern="^task19$"),
            ],
            states={
                states.CHOOSING_MODE: [
                    # –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ–∂–∏–º—ã
                    CallbackQueryHandler(handlers.practice_mode, pattern="^t19_practice$"),
                    CallbackQueryHandler(handlers.theory_mode, pattern="^t19_theory$"),
                    CallbackQueryHandler(handlers.examples_bank, pattern="^t19_examples$"),
                    CallbackQueryHandler(handlers.show_progress, pattern="^t19_progress$"),
                    CallbackQueryHandler(handlers.settings_mode, pattern="^t19_settings$"),
                    CallbackQueryHandler(handlers.back_to_main_menu, pattern="^to_main_menu$"),
                    CallbackQueryHandler(handlers.return_to_menu, pattern="^t19_menu$"),
                    
                    # –í—ã–±–æ—Ä —Ç–µ–º
                    CallbackQueryHandler(handlers.random_topic, pattern="^t19_random$"),
                    CallbackQueryHandler(handlers.select_block, pattern="^t19_select_block$"),
                    CallbackQueryHandler(handlers.list_topics, pattern="^t19_list_topics$"),
                    
                    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
                    CallbackQueryHandler(handlers.bank_search, pattern="^t19_bank_search$"),
                    CallbackQueryHandler(handlers.bank_navigation, pattern="^t19_bank_nav:"),
                    CallbackQueryHandler(handlers.export_results, pattern="^t19_export$"),
                    CallbackQueryHandler(handlers.reset_results, pattern="^t19_reset_confirm$"),
                    CallbackQueryHandler(handlers.noop, pattern="^noop$"),
                ],
                
                states.CHOOSING_BLOCK: [
                    CallbackQueryHandler(handlers.block_menu, pattern="^t19_block:"),
                    CallbackQueryHandler(handlers.list_topics, pattern="^t19_list_topics$"),
                    CallbackQueryHandler(handlers.random_topic_block, pattern="^t19_random_block$"),
                    CallbackQueryHandler(handlers.practice_mode, pattern="^t19_practice$"),
                    CallbackQueryHandler(handlers.return_to_menu, pattern="^t19_menu$"),
                ],
                
                states.CHOOSING_TOPIC: [
                    CallbackQueryHandler(handlers.select_topic, pattern="^t19_topic:"),
                    CallbackQueryHandler(handlers.practice_mode, pattern="^t19_practice$"),
                    CallbackQueryHandler(handlers.block_menu, pattern="^t19_block:"),
                    CallbackQueryHandler(handlers.list_topics, pattern=r"^t19_list_topics:page:\d+"),
                    CallbackQueryHandler(handlers.return_to_menu, pattern="^t19_menu$"),
                ],
                
                states.ANSWERING: [
                    # –í–ê–ñ–ù–û: –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã
                    MessageHandler(filters.TEXT & ~filters.COMMAND, handlers.handle_answer),
                    MessageHandler(filters.Document.ALL, handlers.handle_answer_document_task19),
                    # –î–æ–±–∞–≤–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–º–µ–Ω—ã
                    CallbackQueryHandler(handlers.practice_mode, pattern="^t19_practice$"),
                    CallbackQueryHandler(handlers.return_to_menu, pattern="^t19_menu$"),
                ],
                
                states.SEARCHING: [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, handlers.handle_bank_search),
                    CallbackQueryHandler(handlers.examples_bank, pattern="^t19_examples$"),
                ],
                
                # –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –æ—Ü–µ–Ω–∫–∏ –æ—Ç–≤–µ—Ç–∞
                states.AWAITING_FEEDBACK: [
                    CallbackQueryHandler(handlers.practice_mode, pattern="^next_topic$"),
                    CallbackQueryHandler(handlers.return_to_menu, pattern="^t19_menu$"),
                    CallbackQueryHandler(handlers.back_to_main_menu, pattern="^to_main_menu$"),
                    CallbackQueryHandler(handlers.practice_mode, pattern="^retry$"),
                ],
            },
            fallbacks=[
                CommandHandler("cancel", handlers.cmd_cancel),
                CallbackQueryHandler(handlers.return_to_menu, pattern="^t19_menu$"),
                CallbackQueryHandler(handlers.back_to_main_menu, pattern="^to_main_menu$"),
                # –î–æ–±–∞–≤–∏—Ç—å fallback –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö callback'–æ–≤
                CallbackQueryHandler(lambda u, c: u.callback_query.answer("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞"), pattern=".*"),
            ],
            name="task19_conversation",
            persistent=False,  # –í–∞–∂–Ω–æ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
            per_message=False,  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–≤—è–∑–∞–Ω–æ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –Ω–µ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
            per_chat=True,  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–∞—Ç–∞ –æ—Ç–¥–µ–ª—å–Ω–æ
            per_user=True,  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ
        )
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
        app.add_handler(conv_handler)
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "OK" –ø–æ—Å–ª–µ –ø–æ–∫–∞–∑–∞ streak
        app.add_handler(
            CallbackQueryHandler(
                lambda u, c: u.callback_query.answer("üëç"),
                pattern="^streak_ok$"
            )
        )
        
        logger.info(f"Registered handlers for {self.title} plugin")


# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–ª–∞–≥–∏–Ω
plugin = Task19Plugin()