#!/usr/bin/env python3
"""
–î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç–µ–∂–∞ –∏ webhook –ª–æ–≥–æ–≤
"""

import sqlite3
from datetime import datetime

def check_payment_details(order_id: str):
    conn = sqlite3.connect('quiz_async.db')
    cursor = conn.cursor()

    print(f"\n{'='*80}")
    print(f"–î–ï–¢–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ü–õ–ê–¢–ï–ñ–ê")
    print('='*80)

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–µ
    cursor.execute(
        """
        SELECT payment_id, order_id, user_id, plan_id, amount, status,
               created_at, completed_at, metadata, rebill_id, is_recurrent, email
        FROM payments
        WHERE order_id = ?
        """,
        (order_id,)
    )
    payment = cursor.fetchone()

    if not payment:
        print(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        conn.close()
        return

    payment_id, order_id, user_id, plan_id, amount, status, created_at, completed_at, metadata, rebill_id, is_recurrent, email = payment

    print(f"\nüîç –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–õ–ê–¢–ï–ñ–ï:")
    print(f"   Payment ID: {payment_id}")
    print(f"   Order ID: {order_id}")
    print(f"   User ID: {user_id}")
    print(f"   Plan ID: {plan_id}")
    print(f"   Amount: {amount} –∫–æ–ø. ({amount/100:.2f} —Ä—É–±.)")
    print(f"   Status: {status}")
    print(f"   Created At: {created_at}")
    print(f"   Completed At: {completed_at}")
    print(f"   Email: {email}")
    print(f"   Metadata: {metadata}")
    print(f"   Rebill ID: {rebill_id}")
    print(f"   Is Recurrent: {is_recurrent}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook –ª–æ–≥–∏
    print(f"\nüì® WEBHOOK –õ–û–ì–ò:")
    cursor.execute(
        """
        SELECT id, order_id, status, payment_id, created_at, raw_data
        FROM webhook_logs
        WHERE order_id = ?
        ORDER BY created_at DESC
        """,
        (order_id,)
    )
    webhooks = cursor.fetchall()

    if webhooks:
        for wh in webhooks:
            wh_id, wh_order_id, wh_status, wh_payment_id, wh_created_at, raw_data = wh
            print(f"\n   üîπ Webhook ID: {wh_id}")
            print(f"      Status: {wh_status}")
            print(f"      Payment ID: {wh_payment_id}")
            print(f"      Created At: {wh_created_at}")
            print(f"      Raw Data: {raw_data[:200]}..." if len(raw_data) > 200 else f"      Raw Data: {raw_data}")
    else:
        print(f"   ‚ùå Webhook –ª–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è —ç—Ç–æ–≥–æ order_id")
        print(f"   –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ webhook –æ—Ç Tinkoff –ù–ï –±—ã–ª –ø–æ–ª—É—á–µ–Ω –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω.")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print(f"\nüìã –ü–û–î–ü–ò–°–ö–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø {user_id}:")
    cursor.execute(
        """
        SELECT id, module_code, plan_id, expires_at, is_active, created_at
        FROM module_subscriptions
        WHERE user_id = ?
        ORDER BY created_at DESC
        """,
        (user_id,)
    )
    subscriptions = cursor.fetchall()

    if subscriptions:
        for sub in subscriptions:
            sub_id, module_code, sub_plan_id, expires_at, is_active, sub_created_at = sub
            status_emoji = "‚úÖ" if is_active else "‚ùå"
            print(f"\n   {status_emoji} ID: {sub_id}")
            print(f"      Module: {module_code}")
            print(f"      Plan: {sub_plan_id}")
            print(f"      Expires At: {expires_at}")
            print(f"      Is Active: {is_active}")
            print(f"      Created At: {sub_created_at}")
    else:
        print(f"   ‚ùå –ù–µ—Ç –ø–æ–¥–ø–∏—Å–æ–∫ (–Ω–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö, –Ω–∏ –∏—Å—Ç–µ–∫—à–∏—Ö)")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    print(f"\nüì¨ –ò–°–¢–û–†–ò–Ø –£–í–ï–î–û–ú–õ–ï–ù–ò–ô:")
    cursor.execute(
        """
        SELECT id, user_id, order_id, notification_type, created_at
        FROM notification_history
        WHERE order_id = ?
        ORDER BY created_at DESC
        """,
        (order_id,)
    )
    notifications = cursor.fetchall()

    if notifications:
        for notif in notifications:
            notif_id, notif_user_id, notif_order_id, notif_type, notif_created_at = notif
            print(f"\n   üìß Notification ID: {notif_id}")
            print(f"      Type: {notif_type}")
            print(f"      Created At: {notif_created_at}")
    else:
        print(f"   ‚ùå –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏—Å—å")

    # –í—Å–µ –ø–ª–∞—Ç–µ–∂–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print(f"\nüìä –í–°–ï –ü–õ–ê–¢–ï–ñ–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø {user_id}:")
    cursor.execute(
        """
        SELECT payment_id, order_id, plan_id, amount, status, created_at
        FROM payments
        WHERE user_id = ?
        ORDER BY created_at DESC
        LIMIT 10
        """,
        (user_id,)
    )
    all_payments = cursor.fetchall()

    for pay in all_payments:
        pay_id, pay_order_id, pay_plan_id, pay_amount, pay_status, pay_created_at = pay
        is_current = "üëâ " if pay_order_id == order_id else "   "
        print(f"\n   {is_current}Payment ID: {pay_id}")
        print(f"      Order ID: {pay_order_id}")
        print(f"      Plan: {pay_plan_id}")
        print(f"      Amount: {pay_amount/100:.2f} —Ä—É–±.")
        print(f"      Status: {pay_status}")
        print(f"      Created At: {pay_created_at}")

    print(f"\n{'='*80}")
    print(f"–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:")
    print('='*80)

    if status == 'NEW':
        print(f"\n‚ö†Ô∏è  –°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞: 'NEW'")
        print(f"   –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ:")
        print(f"   1. –ü–ª–∞—Ç–µ–∂ –±—ã–ª —Å–æ–∑–¥–∞–Ω –≤ —Å–∏—Å—Ç–µ–º–µ Tinkoff")
        print(f"   2. Webhook –æ—Ç Tinkoff –ù–ï –±—ã–ª –ø–æ–ª—É—á–µ–Ω")
        print(f"   3. –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print(f"      - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª –æ–ø–ª–∞—Ç—É")
        print(f"      - –û–ø–ª–∞—Ç–∞ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –±–∞–Ω–∫–æ–º")
        print(f"      - Webhook –Ω–µ –¥–æ—à–µ–ª –¥–æ —Å–µ—Ä–≤–µ—Ä–∞ (–ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é)")
        print(f"      - Webhook –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –Ω–æ –Ω–µ –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω (–æ—à–∏–±–∫–∞ –≤ –∫–æ–¥–µ)")

        if not webhooks:
            print(f"\n   ‚ùå Webhook –ª–æ–≥–∏ –û–¢–°–£–¢–°–¢–í–£–Æ–¢")
            print(f"   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
            print(f"   1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ Tinkoff, –±—ã–ª –ª–∏ –ø–ª–∞—Ç–µ–∂ –æ–ø–ª–∞—á–µ–Ω")
            print(f"   2. –ï—Å–ª–∏ –æ–ø–ª–∞—á–µ–Ω, –Ω–æ webhook –Ω–µ –ø—Ä–∏—à–µ–ª - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook URL")
            print(f"   3. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤—Ä—É—á–Ω—É—é - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:")
            print(f"      python3 manual_activate_subscription.py {order_id}")

    conn.close()

if __name__ == "__main__":
    import sys
    if len(sys.argv) < 2:
        print("Usage: python3 check_payment_details.py <order_id>")
        sys.exit(1)

    order_id = sys.argv[1]
    check_payment_details(order_id)
